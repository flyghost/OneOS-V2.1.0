import os
import sys
import importlib
import importlib.util    

inq_table = {}
inq_table['MODEL_STM32F401'] = 'f401'
inq_table['MODEL_STM32F405'] = 'f405'
inq_table['MODEL_STM32F407'] = 'f407'
inq_table['MODEL_STM32F410'] = 'f410'
inq_table['MODEL_STM32F411'] = 'f411'
inq_table['MODEL_STM32F412'] = 'f412'
inq_table['MODEL_STM32F413'] = 'f413'
inq_table['MODEL_STM32F415'] = 'f415'
inq_table['MODEL_STM32F417'] = 'f417'
inq_table['MODEL_STM32F423'] = 'f423'
inq_table['MODEL_STM32F427'] = 'f427'
inq_table['MODEL_STM32F429'] = 'f429'
inq_table['MODEL_STM32F43X'] = 'f43x'
inq_table['MODEL_STM32F446'] = 'f446'
inq_table['MODEL_STM32F469'] = 'f469'
inq_table['MODEL_STM32F479'] = 'f479'

def soc_type_inq(g):
    for inq in inq_table:
        if inq not in g:
            continue
            
        print(inq)
            
        realdir = os.path.dirname(os.path.realpath(__file__))
    
        sub_path = os.path.join(realdir, inq_table[inq])
        sub_script = os.path.join(sub_path, "SConscript")

        loader = importlib.machinery.SourceFileLoader('SConscript', sub_script)
        spec   = importlib.util.spec_from_loader(loader.name, loader)
        mod    = importlib.util.module_from_spec(spec)
        loader.exec_module(mod)
        target_path = mod.soc_type_inq(g)
        
        return target_path
    
    return None
    