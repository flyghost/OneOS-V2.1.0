// This file was automatically generated by makeqstrdata.py
QDEF(MP_QSTRnull, (const byte*)"\x00\x00" "")
QDEF(MP_QSTR_, (const byte*)"\x05\x00" "")
QDEF(MP_QSTR___abs__, (const byte*)"\x95\x07" "__abs__")
QDEF(MP_QSTR___add__, (const byte*)"\xc4\x07" "__add__")
QDEF(MP_QSTR___and__, (const byte*)"\x0e\x07" "__and__")
QDEF(MP_QSTR___bool__, (const byte*)"\x2b\x08" "__bool__")
QDEF(MP_QSTR___build_class__, (const byte*)"\x42\x0f" "__build_class__")
QDEF(MP_QSTR___call__, (const byte*)"\xa7\x08" "__call__")
QDEF(MP_QSTR___class__, (const byte*)"\x2b\x09" "__class__")
QDEF(MP_QSTR___contains__, (const byte*)"\xc6\x0c" "__contains__")
QDEF(MP_QSTR___del__, (const byte*)"\x68\x07" "__del__")
QDEF(MP_QSTR___delitem__, (const byte*)"\xfd\x0b" "__delitem__")
QDEF(MP_QSTR___divmod__, (const byte*)"\x78\x0a" "__divmod__")
QDEF(MP_QSTR___enter__, (const byte*)"\x6d\x09" "__enter__")
QDEF(MP_QSTR___eq__, (const byte*)"\x71\x06" "__eq__")
QDEF(MP_QSTR___exit__, (const byte*)"\x45\x08" "__exit__")
QDEF(MP_QSTR___file__, (const byte*)"\x03\x08" "__file__")
QDEF(MP_QSTR___floordiv__, (const byte*)"\x46\x0c" "__floordiv__")
QDEF(MP_QSTR___ge__, (const byte*)"\xa7\x06" "__ge__")
QDEF(MP_QSTR___getattr__, (const byte*)"\x40\x0b" "__getattr__")
QDEF(MP_QSTR___getitem__, (const byte*)"\x26\x0b" "__getitem__")
QDEF(MP_QSTR___gt__, (const byte*)"\xb6\x06" "__gt__")
QDEF(MP_QSTR___hash__, (const byte*)"\xf7\x08" "__hash__")
QDEF(MP_QSTR___iadd__, (const byte*)"\x6d\x08" "__iadd__")
QDEF(MP_QSTR___import__, (const byte*)"\x38\x0a" "__import__")
QDEF(MP_QSTR___init__, (const byte*)"\x5f\x08" "__init__")
QDEF(MP_QSTR___invert__, (const byte*)"\xf7\x0a" "__invert__")
QDEF(MP_QSTR_mtest, (const byte*)"\x3e\x05" "mtest")
QDEF(MP_QSTR_test, (const byte*)"\x33\x04" "test")
QDEF(MP_QSTR___isub__, (const byte*)"\x08\x08" "__isub__")
QDEF(MP_QSTR___iter__, (const byte*)"\xcf\x08" "__iter__")
QDEF(MP_QSTR___le__, (const byte*)"\xcc\x06" "__le__")
QDEF(MP_QSTR___len__, (const byte*)"\xe2\x07" "__len__")
QDEF(MP_QSTR___lshift__, (const byte*)"\x09\x0a" "__lshift__")
QDEF(MP_QSTR___lt__, (const byte*)"\x5d\x06" "__lt__")
QDEF(MP_QSTR___main__, (const byte*)"\x8e\x08" "__main__")
QDEF(MP_QSTR___mod__, (const byte*)"\x63\x07" "__mod__")
QDEF(MP_QSTR___module__, (const byte*)"\xff\x0a" "__module__")
QDEF(MP_QSTR___mul__, (const byte*)"\x31\x07" "__mul__")
QDEF(MP_QSTR___name__, (const byte*)"\xe2\x08" "__name__")
QDEF(MP_QSTR___neg__, (const byte*)"\x69\x07" "__neg__")
QDEF(MP_QSTR___new__, (const byte*)"\x79\x07" "__new__")
QDEF(MP_QSTR___next__, (const byte*)"\x02\x08" "__next__")
QDEF(MP_QSTR___or__, (const byte*)"\x38\x06" "__or__")
QDEF(MP_QSTR___path__, (const byte*)"\xc8\x08" "__path__")
QDEF(MP_QSTR___pos__, (const byte*)"\x29\x07" "__pos__")
QDEF(MP_QSTR___pow__, (const byte*)"\x2d\x07" "__pow__")
QDEF(MP_QSTR___qualname__, (const byte*)"\x6b\x0c" "__qualname__")
QDEF(MP_QSTR___repl_print__, (const byte*)"\x01\x0e" "__repl_print__")
QDEF(MP_QSTR___repr__, (const byte*)"\x10\x08" "__repr__")
QDEF(MP_QSTR___reversed__, (const byte*)"\x61\x0c" "__reversed__")
QDEF(MP_QSTR___rshift__, (const byte*)"\x57\x0a" "__rshift__")
QDEF(MP_QSTR___setitem__, (const byte*)"\x32\x0b" "__setitem__")
QDEF(MP_QSTR___str__, (const byte*)"\xd0\x07" "__str__")
QDEF(MP_QSTR___sub__, (const byte*)"\x21\x07" "__sub__")
QDEF(MP_QSTR___traceback__, (const byte*)"\x4f\x0d" "__traceback__")
QDEF(MP_QSTR___truediv__, (const byte*)"\x88\x0b" "__truediv__")
QDEF(MP_QSTR___xor__, (const byte*)"\x20\x07" "__xor__")
QDEF(MP_QSTR__star_, (const byte*)"\x8f\x01" "*")
QDEF(MP_QSTR__, (const byte*)"\xfa\x01" "_")
QDEF(MP_QSTR__slash_, (const byte*)"\x8a\x01" "/")
QDEF(MP_QSTR__percent__hash_o, (const byte*)"\x6c\x03" "%#o")
QDEF(MP_QSTR__percent__hash_x, (const byte*)"\x7b\x03" "%#x")
QDEF(MP_QSTR__brace_open__colon__hash_b_brace_close_, (const byte*)"\x58\x05" "{:#b}")
QDEF(MP_QSTR__0x0a_, (const byte*)"\xaf\x01" "\x0a")
QDEF(MP_QSTR_maximum_space_recursion_space_depth_space_exceeded, (const byte*)"\x73\x20" "maximum recursion depth exceeded")
QDEF(MP_QSTR__lt_module_gt_, (const byte*)"\xbd\x08" "<module>")
QDEF(MP_QSTR__lt_lambda_gt_, (const byte*)"\x80\x08" "<lambda>")
QDEF(MP_QSTR__lt_listcomp_gt_, (const byte*)"\xd4\x0a" "<listcomp>")
QDEF(MP_QSTR__lt_dictcomp_gt_, (const byte*)"\xcc\x0a" "<dictcomp>")
QDEF(MP_QSTR__lt_setcomp_gt_, (const byte*)"\x54\x09" "<setcomp>")
QDEF(MP_QSTR__lt_genexpr_gt_, (const byte*)"\x34\x09" "<genexpr>")
QDEF(MP_QSTR__lt_string_gt_, (const byte*)"\x52\x08" "<string>")
QDEF(MP_QSTR__lt_stdin_gt_, (const byte*)"\xe3\x07" "<stdin>")
QDEF(MP_QSTR_utf_hyphen_8, (const byte*)"\xb7\x05" "utf-8")
QDEF(MP_QSTR_ALT_OD, (const byte*)"\x88\x06" "ALT_OD")
QDEF(MP_QSTR_ALT_PP, (const byte*)"\xe3\x06" "ALT_PP")
QDEF(MP_QSTR_ANALOG, (const byte*)"\xaf\x06" "ANALOG")
QDEF(MP_QSTR_ARRAY, (const byte*)"\x5c\x05" "ARRAY")
QDEF(MP_QSTR_ArithmeticError, (const byte*)"\x2d\x0f" "ArithmeticError")
QDEF(MP_QSTR_AssertionError, (const byte*)"\x97\x0e" "AssertionError")
QDEF(MP_QSTR_AttributeError, (const byte*)"\x21\x0e" "AttributeError")
QDEF(MP_QSTR_BFINT16, (const byte*)"\x95\x07" "BFINT16")
QDEF(MP_QSTR_BFINT32, (const byte*)"\x53\x07" "BFINT32")
QDEF(MP_QSTR_BFINT8, (const byte*)"\x4a\x06" "BFINT8")
QDEF(MP_QSTR_BFUINT16, (const byte*)"\x40\x08" "BFUINT16")
QDEF(MP_QSTR_BFUINT32, (const byte*)"\x06\x08" "BFUINT32")
QDEF(MP_QSTR_BFUINT8, (const byte*)"\xbf\x07" "BFUINT8")
QDEF(MP_QSTR_BF_LEN, (const byte*)"\x19\x06" "BF_LEN")
QDEF(MP_QSTR_BF_POS, (const byte*)"\x52\x06" "BF_POS")
QDEF(MP_QSTR_BIG_ENDIAN, (const byte*)"\xff\x0a" "BIG_ENDIAN")
QDEF(MP_QSTR_BaseException, (const byte*)"\x07\x0d" "BaseException")
QDEF(MP_QSTR_BytesIO, (const byte*)"\x1a\x07" "BytesIO")
QDEF(MP_QSTR_DEBUG, (const byte*)"\x34\x05" "DEBUG")
QDEF(MP_QSTR_DEEPSLEEP_RESET, (const byte*)"\x14\x0f" "DEEPSLEEP_RESET")
QDEF(MP_QSTR_DecompIO, (const byte*)"\x93\x08" "DecompIO")
QDEF(MP_QSTR_EOFError, (const byte*)"\x91\x08" "EOFError")
QDEF(MP_QSTR_Ellipsis, (const byte*)"\xf0\x08" "Ellipsis")
QDEF(MP_QSTR_Exception, (const byte*)"\xf2\x09" "Exception")
QDEF(MP_QSTR_FLOAT32, (const byte*)"\xb4\x07" "FLOAT32")
QDEF(MP_QSTR_FLOAT64, (const byte*)"\x17\x07" "FLOAT64")
QDEF(MP_QSTR_GeneratorExit, (const byte*)"\x16\x0d" "GeneratorExit")
QDEF(MP_QSTR_HARD_RESET, (const byte*)"\xb0\x0a" "HARD_RESET")
QDEF(MP_QSTR_IN, (const byte*)"\x22\x02" "IN")
QDEF(MP_QSTR_INT16, (const byte*)"\x91\x05" "INT16")
QDEF(MP_QSTR_INT32, (const byte*)"\x57\x05" "INT32")
QDEF(MP_QSTR_INT64, (const byte*)"\xf4\x05" "INT64")
QDEF(MP_QSTR_INT8, (const byte*)"\xce\x04" "INT8")
QDEF(MP_QSTR_IRQ_FALLING, (const byte*)"\x37\x0b" "IRQ_FALLING")
QDEF(MP_QSTR_IRQ_RISING, (const byte*)"\x78\x0a" "IRQ_RISING")
QDEF(MP_QSTR_IRQ_RISING_FALLING, (const byte*)"\x60\x12" "IRQ_RISING_FALLING")
QDEF(MP_QSTR_IRQ_LOW_LEVEL, (const byte*)"\x8d\x0d" "IRQ_LOW_LEVEL")
QDEF(MP_QSTR_IRQ_HIGH_LEVEL, (const byte*)"\x57\x0e" "IRQ_HIGH_LEVEL")
QDEF(MP_QSTR_ImportError, (const byte*)"\x20\x0b" "ImportError")
QDEF(MP_QSTR_IndentationError, (const byte*)"\x5c\x10" "IndentationError")
QDEF(MP_QSTR_IndexError, (const byte*)"\x83\x0a" "IndexError")
QDEF(MP_QSTR_KeyError, (const byte*)"\xea\x08" "KeyError")
QDEF(MP_QSTR_KeyboardInterrupt, (const byte*)"\xaf\x11" "KeyboardInterrupt")
QDEF(MP_QSTR_LITTLE_ENDIAN, (const byte*)"\xbf\x0d" "LITTLE_ENDIAN")
QDEF(MP_QSTR_LookupError, (const byte*)"\xff\x0b" "LookupError")
QDEF(MP_QSTR_MemoryError, (const byte*)"\xdc\x0b" "MemoryError")
QDEF(MP_QSTR_NATIVE, (const byte*)"\x04\x06" "NATIVE")
QDEF(MP_QSTR_NameError, (const byte*)"\xba\x09" "NameError")
QDEF(MP_QSTR_NoneType, (const byte*)"\x17\x08" "NoneType")
QDEF(MP_QSTR_NotImplementedError, (const byte*)"\xc6\x13" "NotImplementedError")
QDEF(MP_QSTR_OSError, (const byte*)"\xa1\x07" "OSError")
QDEF(MP_QSTR_OUT_OD, (const byte*)"\x1f\x06" "OUT_OD")
QDEF(MP_QSTR_OUT_PP, (const byte*)"\x34\x06" "OUT_PP")
QDEF(MP_QSTR_OrderedDict, (const byte*)"\xf0\x0b" "OrderedDict")
QDEF(MP_QSTR_OverflowError, (const byte*)"\x81\x0d" "OverflowError")
QDEF(MP_QSTR_PTR, (const byte*)"\xb3\x03" "PTR")
QDEF(MP_QSTR_PULL_DOWN, (const byte*)"\xad\x09" "PULL_DOWN")
QDEF(MP_QSTR_PULL_NONE, (const byte*)"\x55\x09" "PULL_NONE")
QDEF(MP_QSTR_PULL_UP, (const byte*)"\xba\x07" "PULL_UP")
QDEF(MP_QSTR_PWRON_RESET, (const byte*)"\xdb\x0b" "PWRON_RESET")
QDEF(MP_QSTR_Pin, (const byte*)"\x12\x03" "Pin")
QDEF(MP_QSTR_PinBase, (const byte*)"\x47\x07" "PinBase")
QDEF(MP_QSTR_RuntimeError, (const byte*)"\x61\x0c" "RuntimeError")
QDEF(MP_QSTR_SOFT_RESET, (const byte*)"\x01\x0a" "SOFT_RESET")
QDEF(MP_QSTR_Signal, (const byte*)"\x9b\x06" "Signal")
QDEF(MP_QSTR_StopIteration, (const byte*)"\xea\x0d" "StopIteration")
QDEF(MP_QSTR_StringIO, (const byte*)"\x76\x08" "StringIO")
QDEF(MP_QSTR_SyntaxError, (const byte*)"\x94\x0b" "SyntaxError")
QDEF(MP_QSTR_SystemExit, (const byte*)"\x20\x0a" "SystemExit")
QDEF(MP_QSTR_TypeError, (const byte*)"\x25\x09" "TypeError")
QDEF(MP_QSTR_UINT16, (const byte*)"\xc4\x06" "UINT16")
QDEF(MP_QSTR_UINT32, (const byte*)"\x82\x06" "UINT32")
QDEF(MP_QSTR_UINT64, (const byte*)"\x61\x06" "UINT64")
QDEF(MP_QSTR_UINT8, (const byte*)"\xbb\x05" "UINT8")
QDEF(MP_QSTR_UnicodeError, (const byte*)"\x22\x0c" "UnicodeError")
QDEF(MP_QSTR_VOID, (const byte*)"\x31\x04" "VOID")
QDEF(MP_QSTR_ValueError, (const byte*)"\x96\x0a" "ValueError")
QDEF(MP_QSTR_WDT_RESET, (const byte*)"\x08\x09" "WDT_RESET")
QDEF(MP_QSTR_ZeroDivisionError, (const byte*)"\xb6\x11" "ZeroDivisionError")
QDEF(MP_QSTR_a2b_base64, (const byte*)"\x3c\x0a" "a2b_base64")
QDEF(MP_QSTR_abs, (const byte*)"\x95\x03" "abs")
QDEF(MP_QSTR_acos, (const byte*)"\x1b\x04" "acos")
QDEF(MP_QSTR_acosh, (const byte*)"\x13\x05" "acosh")
QDEF(MP_QSTR_add, (const byte*)"\x44\x03" "add")
QDEF(MP_QSTR_addressof, (const byte*)"\x5a\x09" "addressof")
QDEF(MP_QSTR_all, (const byte*)"\x44\x03" "all")
QDEF(MP_QSTR_any, (const byte*)"\x13\x03" "any")
QDEF(MP_QSTR_append, (const byte*)"\x6b\x06" "append")
QDEF(MP_QSTR_args, (const byte*)"\xc2\x04" "args")
QDEF(MP_QSTR_array, (const byte*)"\x7c\x05" "array")
QDEF(MP_QSTR_asin, (const byte*)"\x50\x04" "asin")
QDEF(MP_QSTR_asinh, (const byte*)"\x38\x05" "asinh")
QDEF(MP_QSTR_atan, (const byte*)"\x1f\x04" "atan")
QDEF(MP_QSTR_atan2, (const byte*)"\xcd\x05" "atan2")
QDEF(MP_QSTR_atanh, (const byte*)"\x97\x05" "atanh")
QDEF(MP_QSTR_b2a_base64, (const byte*)"\x3c\x0a" "b2a_base64")
QDEF(MP_QSTR_bin, (const byte*)"\xe0\x03" "bin")
QDEF(MP_QSTR_bool, (const byte*)"\xeb\x04" "bool")
QDEF(MP_QSTR_bound_method, (const byte*)"\x97\x0c" "bound_method")
QDEF(MP_QSTR_builtins, (const byte*)"\xf7\x08" "builtins")
QDEF(MP_QSTR_bytearray, (const byte*)"\x76\x09" "bytearray")
QDEF(MP_QSTR_bytearray_at, (const byte*)"\x9c\x0c" "bytearray_at")
QDEF(MP_QSTR_bytecode, (const byte*)"\x22\x08" "bytecode")
QDEF(MP_QSTR_bytes, (const byte*)"\x5c\x05" "bytes")
QDEF(MP_QSTR_bytes_at, (const byte*)"\xb6\x08" "bytes_at")
QDEF(MP_QSTR_callable, (const byte*)"\x0d\x08" "callable")
QDEF(MP_QSTR_ceil, (const byte*)"\x06\x04" "ceil")
QDEF(MP_QSTR_center, (const byte*)"\x4e\x06" "center")
QDEF(MP_QSTR_choice, (const byte*)"\x2e\x06" "choice")
QDEF(MP_QSTR_chr, (const byte*)"\xdc\x03" "chr")
QDEF(MP_QSTR_classmethod, (const byte*)"\xb4\x0b" "classmethod")
QDEF(MP_QSTR_clear, (const byte*)"\x7c\x05" "clear")
QDEF(MP_QSTR_close, (const byte*)"\x33\x05" "close")
QDEF(MP_QSTR_closure, (const byte*)"\x74\x07" "closure")
QDEF(MP_QSTR_cmath, (const byte*)"\xb6\x05" "cmath")
QDEF(MP_QSTR_code, (const byte*)"\x68\x04" "code")
QDEF(MP_QSTR_collect, (const byte*)"\x9b\x07" "collect")
QDEF(MP_QSTR_compile, (const byte*)"\xf4\x07" "compile")
QDEF(MP_QSTR_complex, (const byte*)"\xc5\x07" "complex")
QDEF(MP_QSTR_const, (const byte*)"\xc0\x05" "const")
QDEF(MP_QSTR_copy, (const byte*)"\xe0\x04" "copy")
QDEF(MP_QSTR_copysign, (const byte*)"\x33\x08" "copysign")
QDEF(MP_QSTR_cos, (const byte*)"\x7a\x03" "cos")
QDEF(MP_QSTR_cosh, (const byte*)"\xd2\x04" "cosh")
QDEF(MP_QSTR_count, (const byte*)"\xa6\x05" "count")
QDEF(MP_QSTR_current_tid, (const byte*)"\xca\x0b" "current_tid")
QDEF(MP_QSTR_decompress, (const byte*)"\x62\x0a" "decompress")
QDEF(MP_QSTR_deepsleep, (const byte*)"\x9e\x09" "deepsleep")
QDEF(MP_QSTR_default, (const byte*)"\xce\x07" "default")
QDEF(MP_QSTR_degrees, (const byte*)"\x02\x07" "degrees")
QDEF(MP_QSTR_delay, (const byte*)"\x50\x05" "delay")
QDEF(MP_QSTR_deleter, (const byte*)"\x6e\x07" "deleter")
QDEF(MP_QSTR_dict, (const byte*)"\x3f\x04" "dict")
QDEF(MP_QSTR_dict_view, (const byte*)"\x2d\x09" "dict_view")
QDEF(MP_QSTR_difference, (const byte*)"\x72\x0a" "difference")
QDEF(MP_QSTR_difference_update, (const byte*)"\x9c\x11" "difference_update")
QDEF(MP_QSTR_digest, (const byte*)"\xcd\x06" "digest")
QDEF(MP_QSTR_dir, (const byte*)"\xfa\x03" "dir")
QDEF(MP_QSTR_disable, (const byte*)"\x91\x07" "disable")
QDEF(MP_QSTR_disable_irq, (const byte*)"\x04\x0b" "disable_irq")
QDEF(MP_QSTR_discard, (const byte*)"\x0f\x07" "discard")
QDEF(MP_QSTR_divmod, (const byte*)"\xb8\x06" "divmod")
QDEF(MP_QSTR_doc, (const byte*)"\x2d\x03" "doc")
QDEF(MP_QSTR_dump, (const byte*)"\xe9\x04" "dump")
QDEF(MP_QSTR_dumps, (const byte*)"\x7a\x05" "dumps")
QDEF(MP_QSTR_e, (const byte*)"\xc0\x01" "e")
QDEF(MP_QSTR_elapsed_micros, (const byte*)"\x39\x0e" "elapsed_micros")
QDEF(MP_QSTR_elapsed_millis, (const byte*)"\x8e\x0e" "elapsed_millis")
QDEF(MP_QSTR_enable, (const byte*)"\x04\x06" "enable")
QDEF(MP_QSTR_enable_irq, (const byte*)"\x91\x0a" "enable_irq")
QDEF(MP_QSTR_end, (const byte*)"\x0a\x03" "end")
QDEF(MP_QSTR_endswith, (const byte*)"\x1b\x08" "endswith")
QDEF(MP_QSTR_enumerate, (const byte*)"\x71\x09" "enumerate")
QDEF(MP_QSTR_erf, (const byte*)"\x94\x03" "erf")
QDEF(MP_QSTR_erfc, (const byte*)"\x77\x04" "erfc")
QDEF(MP_QSTR_eval, (const byte*)"\x9b\x04" "eval")
QDEF(MP_QSTR_exec, (const byte*)"\x1e\x04" "exec")
QDEF(MP_QSTR_execfile, (const byte*)"\x58\x08" "execfile")
QDEF(MP_QSTR_exp, (const byte*)"\xc8\x03" "exp")
QDEF(MP_QSTR_expm1, (const byte*)"\x74\x05" "expm1")
QDEF(MP_QSTR_extend, (const byte*)"\x63\x06" "extend")
QDEF(MP_QSTR_fabs, (const byte*)"\x93\x04" "fabs")
QDEF(MP_QSTR_fault_debug, (const byte*)"\x61\x0b" "fault_debug")
QDEF(MP_QSTR_filter, (const byte*)"\x25\x06" "filter")
QDEF(MP_QSTR_find, (const byte*)"\x01\x04" "find")
QDEF(MP_QSTR_float, (const byte*)"\x35\x05" "float")
QDEF(MP_QSTR_floor, (const byte*)"\x7d\x05" "floor")
QDEF(MP_QSTR_flush, (const byte*)"\x61\x05" "flush")
QDEF(MP_QSTR_fmod, (const byte*)"\xe5\x04" "fmod")
QDEF(MP_QSTR_format, (const byte*)"\x26\x06" "format")
QDEF(MP_QSTR_freq, (const byte*)"\xe5\x04" "freq")
QDEF(MP_QSTR_frexp, (const byte*)"\x1c\x05" "frexp")
QDEF(MP_QSTR_from_bytes, (const byte*)"\x35\x0a" "from_bytes")
QDEF(MP_QSTR_fromkeys, (const byte*)"\x37\x08" "fromkeys")
QDEF(MP_QSTR_frozenset, (const byte*)"\xed\x09" "frozenset")
QDEF(MP_QSTR_function, (const byte*)"\x27\x08" "function")
QDEF(MP_QSTR_gamma, (const byte*)"\x02\x05" "gamma")
QDEF(MP_QSTR_gc, (const byte*)"\x61\x02" "gc")
QDEF(MP_QSTR_generator, (const byte*)"\x96\x09" "generator")
QDEF(MP_QSTR_get, (const byte*)"\x33\x03" "get")
QDEF(MP_QSTR_getattr, (const byte*)"\xc0\x07" "getattr")
QDEF(MP_QSTR_getrandbits, (const byte*)"\x66\x0b" "getrandbits")
QDEF(MP_QSTR_getter, (const byte*)"\x90\x06" "getter")
QDEF(MP_QSTR_getvalue, (const byte*)"\x78\x08" "getvalue")
QDEF(MP_QSTR_globals, (const byte*)"\x9d\x07" "globals")
QDEF(MP_QSTR_group, (const byte*)"\xba\x05" "group")
QDEF(MP_QSTR_hard_reset, (const byte*)"\xd0\x0a" "hard_reset")
QDEF(MP_QSTR_hasattr, (const byte*)"\x8c\x07" "hasattr")
QDEF(MP_QSTR_hash, (const byte*)"\xb7\x04" "hash")
QDEF(MP_QSTR_heap_lock, (const byte*)"\xad\x09" "heap_lock")
QDEF(MP_QSTR_heap_unlock, (const byte*)"\x56\x0b" "heap_unlock")
QDEF(MP_QSTR_heapify, (const byte*)"\xaf\x07" "heapify")
QDEF(MP_QSTR_heappop, (const byte*)"\xd6\x07" "heappop")
QDEF(MP_QSTR_heappush, (const byte*)"\x87\x08" "heappush")
QDEF(MP_QSTR_help, (const byte*)"\x94\x04" "help")
QDEF(MP_QSTR_hex, (const byte*)"\x70\x03" "hex")
QDEF(MP_QSTR_hexlify, (const byte*)"\x2a\x07" "hexlify")
QDEF(MP_QSTR_id, (const byte*)"\x28\x02" "id")
QDEF(MP_QSTR_idle, (const byte*)"\xa1\x04" "idle")
QDEF(MP_QSTR_imag, (const byte*)"\x47\x04" "imag")
QDEF(MP_QSTR_index, (const byte*)"\x7b\x05" "index")
QDEF(MP_QSTR_info, (const byte*)"\xeb\x04" "info")
QDEF(MP_QSTR_init, (const byte*)"\x1f\x04" "init")
QDEF(MP_QSTR_input, (const byte*)"\x73\x05" "input")
QDEF(MP_QSTR_insert, (const byte*)"\x12\x06" "insert")
QDEF(MP_QSTR_int, (const byte*)"\x16\x03" "int")
QDEF(MP_QSTR_intersection, (const byte*)"\x28\x0c" "intersection")
QDEF(MP_QSTR_intersection_update, (const byte*)"\x06\x13" "intersection_update")
QDEF(MP_QSTR_invert, (const byte*)"\xb7\x06" "invert")
QDEF(MP_QSTR_is_preempt_thread, (const byte*)"\x1a\x11" "is_preempt_thread")
QDEF(MP_QSTR_isalpha, (const byte*)"\xeb\x07" "isalpha")
QDEF(MP_QSTR_isdigit, (const byte*)"\xa8\x07" "isdigit")
QDEF(MP_QSTR_isdisjoint, (const byte*)"\xf7\x0a" "isdisjoint")
QDEF(MP_QSTR_isenabled, (const byte*)"\x9a\x09" "isenabled")
QDEF(MP_QSTR_isfinite, (const byte*)"\xa6\x08" "isfinite")
QDEF(MP_QSTR_isinf, (const byte*)"\x3e\x05" "isinf")
QDEF(MP_QSTR_isinstance, (const byte*)"\xb6\x0a" "isinstance")
QDEF(MP_QSTR_islower, (const byte*)"\xfc\x07" "islower")
QDEF(MP_QSTR_isnan, (const byte*)"\x9e\x05" "isnan")
QDEF(MP_QSTR_isspace, (const byte*)"\x5b\x07" "isspace")
QDEF(MP_QSTR_issubclass, (const byte*)"\xb5\x0a" "issubclass")
QDEF(MP_QSTR_issubset, (const byte*)"\xb9\x08" "issubset")
QDEF(MP_QSTR_issuperset, (const byte*)"\xfc\x0a" "issuperset")
QDEF(MP_QSTR_isupper, (const byte*)"\xdd\x07" "isupper")
QDEF(MP_QSTR_items, (const byte*)"\xe3\x05" "items")
QDEF(MP_QSTR_iter, (const byte*)"\x8f\x04" "iter")
QDEF(MP_QSTR_iterator, (const byte*)"\x47\x08" "iterator")
QDEF(MP_QSTR_join, (const byte*)"\xa7\x04" "join")
QDEF(MP_QSTR_kbd_intr, (const byte*)"\xf6\x08" "kbd_intr")
QDEF(MP_QSTR_keepends, (const byte*)"\x62\x08" "keepends")
QDEF(MP_QSTR_key, (const byte*)"\x32\x03" "key")
QDEF(MP_QSTR_keys, (const byte*)"\x01\x04" "keys")
QDEF(MP_QSTR_ldexp, (const byte*)"\x40\x05" "ldexp")
QDEF(MP_QSTR_len, (const byte*)"\x62\x03" "len")
QDEF(MP_QSTR_lgamma, (const byte*)"\xce\x06" "lgamma")
QDEF(MP_QSTR_list, (const byte*)"\x27\x04" "list")
QDEF(MP_QSTR_little, (const byte*)"\x89\x06" "little")
QDEF(MP_QSTR_load, (const byte*)"\x63\x04" "load")
QDEF(MP_QSTR_loads, (const byte*)"\xb0\x05" "loads")
QDEF(MP_QSTR_locals, (const byte*)"\x3b\x06" "locals")
QDEF(MP_QSTR_log, (const byte*)"\x21\x03" "log")
QDEF(MP_QSTR_log10, (const byte*)"\x40\x05" "log10")
QDEF(MP_QSTR_log2, (const byte*)"\x73\x04" "log2")
QDEF(MP_QSTR_lower, (const byte*)"\xc6\x05" "lower")
QDEF(MP_QSTR_lstrip, (const byte*)"\xe5\x06" "lstrip")
QDEF(MP_QSTR_machine, (const byte*)"\x60\x07" "machine")
QDEF(MP_QSTR_map, (const byte*)"\xb9\x03" "map")
QDEF(MP_QSTR_match, (const byte*)"\x96\x05" "match")
QDEF(MP_QSTR_math, (const byte*)"\x35\x04" "math")
QDEF(MP_QSTR_max, (const byte*)"\xb1\x03" "max")
QDEF(MP_QSTR_mem, (const byte*)"\x20\x03" "mem")
QDEF(MP_QSTR_mem_alloc, (const byte*)"\x52\x09" "mem_alloc")
QDEF(MP_QSTR_mem_free, (const byte*)"\xcb\x08" "mem_free")
QDEF(MP_QSTR_mem_info, (const byte*)"\xd1\x08" "mem_info")
QDEF(MP_QSTR_memoryview, (const byte*)"\x69\x0a" "memoryview")
QDEF(MP_QSTR_micropython, (const byte*)"\x0b\x0b" "micropython")
QDEF(MP_QSTR_micros, (const byte*)"\xac\x06" "micros")
QDEF(MP_QSTR_millis, (const byte*)"\x5b\x06" "millis")
QDEF(MP_QSTR_min, (const byte*)"\xaf\x03" "min")
QDEF(MP_QSTR_mode, (const byte*)"\x26\x04" "mode")
QDEF(MP_QSTR_modf, (const byte*)"\x25\x04" "modf")
QDEF(MP_QSTR_module, (const byte*)"\xbf\x06" "module")
QDEF(MP_QSTR_modules, (const byte*)"\xec\x07" "modules")
QDEF(MP_QSTR_mount, (const byte*)"\xa8\x05" "mount")
QDEF(MP_QSTR_name, (const byte*)"\xa2\x04" "name")
QDEF(MP_QSTR_namedtuple, (const byte*)"\x1e\x0a" "namedtuple")
QDEF(MP_QSTR_next, (const byte*)"\x42\x04" "next")
QDEF(MP_QSTR_object, (const byte*)"\x90\x06" "object")
QDEF(MP_QSTR_oct, (const byte*)"\xfd\x03" "oct")
QDEF(MP_QSTR_off, (const byte*)"\x8a\x03" "off")
QDEF(MP_QSTR_on, (const byte*)"\x64\x02" "on")
QDEF(MP_QSTR_open, (const byte*)"\xd1\x04" "open")
QDEF(MP_QSTR_opt_level, (const byte*)"\x87\x09" "opt_level")
QDEF(MP_QSTR_ord, (const byte*)"\x1c\x03" "ord")
QDEF(MP_QSTR_partition, (const byte*)"\x87\x09" "partition")
QDEF(MP_QSTR_peektime, (const byte*)"\x8b\x08" "peektime")
QDEF(MP_QSTR_phase, (const byte*)"\x6a\x05" "phase")
QDEF(MP_QSTR_pi, (const byte*)"\x1c\x02" "pi")
QDEF(MP_QSTR_pin, (const byte*)"\xf2\x03" "pin")
QDEF(MP_QSTR_polar, (const byte*)"\x05\x05" "polar")
QDEF(MP_QSTR_pop, (const byte*)"\x2a\x03" "pop")
QDEF(MP_QSTR_popitem, (const byte*)"\xbf\x07" "popitem")
QDEF(MP_QSTR_pow, (const byte*)"\x2d\x03" "pow")
QDEF(MP_QSTR_print, (const byte*)"\x54\x05" "print")
QDEF(MP_QSTR_property, (const byte*)"\xc2\x08" "property")
QDEF(MP_QSTR_pull, (const byte*)"\x80\x04" "pull")
QDEF(MP_QSTR_push, (const byte*)"\xbb\x04" "push")
QDEF(MP_QSTR_pyb, (const byte*)"\xee\x03" "pyb")
QDEF(MP_QSTR_qstr_info, (const byte*)"\xb0\x09" "qstr_info")
QDEF(MP_QSTR_radians, (const byte*)"\x87\x07" "radians")
QDEF(MP_QSTR_randint, (const byte*)"\xaf\x07" "randint")
QDEF(MP_QSTR_random, (const byte*)"\xbe\x06" "random")
QDEF(MP_QSTR_randrange, (const byte*)"\xa3\x09" "randrange")
QDEF(MP_QSTR_range, (const byte*)"\x1a\x05" "range")
QDEF(MP_QSTR_read, (const byte*)"\xb7\x04" "read")
QDEF(MP_QSTR_readinto, (const byte*)"\x4b\x08" "readinto")
QDEF(MP_QSTR_readline, (const byte*)"\xf9\x08" "readline")
QDEF(MP_QSTR_real, (const byte*)"\xbf\x04" "real")
QDEF(MP_QSTR_rect, (const byte*)"\xe5\x04" "rect")
QDEF(MP_QSTR_remove, (const byte*)"\x63\x06" "remove")
QDEF(MP_QSTR_repl_info, (const byte*)"\xbf\x09" "repl_info")
QDEF(MP_QSTR_replace, (const byte*)"\x49\x07" "replace")
QDEF(MP_QSTR_repr, (const byte*)"\xd0\x04" "repr")
QDEF(MP_QSTR_reset, (const byte*)"\x10\x05" "reset")
QDEF(MP_QSTR_reset_cause, (const byte*)"\xce\x0b" "reset_cause")
QDEF(MP_QSTR_reverse, (const byte*)"\x25\x07" "reverse")
QDEF(MP_QSTR_reversed, (const byte*)"\xa1\x08" "reversed")
QDEF(MP_QSTR_rfind, (const byte*)"\xd2\x05" "rfind")
QDEF(MP_QSTR_rindex, (const byte*)"\xe9\x06" "rindex")
QDEF(MP_QSTR_round, (const byte*)"\xe7\x05" "round")
QDEF(MP_QSTR_rpartition, (const byte*)"\x15\x0a" "rpartition")
QDEF(MP_QSTR_rsplit, (const byte*)"\xa5\x06" "rsplit")
QDEF(MP_QSTR_rstrip, (const byte*)"\x3b\x06" "rstrip")
QDEF(MP_QSTR_search, (const byte*)"\xab\x06" "search")
QDEF(MP_QSTR_seed, (const byte*)"\x92\x04" "seed")
QDEF(MP_QSTR_seek, (const byte*)"\x9d\x04" "seek")
QDEF(MP_QSTR_send, (const byte*)"\xb9\x04" "send")
QDEF(MP_QSTR_sep, (const byte*)"\x23\x03" "sep")
QDEF(MP_QSTR_set, (const byte*)"\x27\x03" "set")
QDEF(MP_QSTR_setattr, (const byte*)"\xd4\x07" "setattr")
QDEF(MP_QSTR_setdefault, (const byte*)"\x6c\x0a" "setdefault")
QDEF(MP_QSTR_setter, (const byte*)"\x04\x06" "setter")
QDEF(MP_QSTR_sha256, (const byte*)"\x2e\x06" "sha256")
QDEF(MP_QSTR_sin, (const byte*)"\xb1\x03" "sin")
QDEF(MP_QSTR_single, (const byte*)"\x3f\x06" "single")
QDEF(MP_QSTR_sinh, (const byte*)"\xb9\x04" "sinh")
QDEF(MP_QSTR_sizeof, (const byte*)"\x49\x06" "sizeof")
QDEF(MP_QSTR_sleep, (const byte*)"\xea\x05" "sleep")
QDEF(MP_QSTR_sleep_ms, (const byte*)"\x0b\x08" "sleep_ms")
QDEF(MP_QSTR_sleep_us, (const byte*)"\x13\x08" "sleep_us")
QDEF(MP_QSTR_slice, (const byte*)"\xb5\x05" "slice")
QDEF(MP_QSTR_soft_reset, (const byte*)"\xe1\x0a" "soft_reset")
QDEF(MP_QSTR_sort, (const byte*)"\xbf\x04" "sort")
QDEF(MP_QSTR_sorted, (const byte*)"\x5e\x06" "sorted")
QDEF(MP_QSTR_split, (const byte*)"\xb7\x05" "split")
QDEF(MP_QSTR_splitlines, (const byte*)"\x6a\x0a" "splitlines")
QDEF(MP_QSTR_sqrt, (const byte*)"\x21\x04" "sqrt")
QDEF(MP_QSTR_stack_use, (const byte*)"\x97\x09" "stack_use")
QDEF(MP_QSTR_stacks_analyze, (const byte*)"\x63\x0e" "stacks_analyze")
QDEF(MP_QSTR_standby, (const byte*)"\xd2\x07" "standby")
QDEF(MP_QSTR_start, (const byte*)"\x85\x05" "start")
QDEF(MP_QSTR_startswith, (const byte*)"\x74\x0a" "startswith")
QDEF(MP_QSTR_staticmethod, (const byte*)"\x62\x0c" "staticmethod")
QDEF(MP_QSTR_step, (const byte*)"\x57\x04" "step")
QDEF(MP_QSTR_stop, (const byte*)"\x9d\x04" "stop")
QDEF(MP_QSTR_str, (const byte*)"\x50\x03" "str")
QDEF(MP_QSTR_strip, (const byte*)"\x29\x05" "strip")
QDEF(MP_QSTR_struct, (const byte*)"\x12\x06" "struct")
QDEF(MP_QSTR_sum, (const byte*)"\x2e\x03" "sum")
QDEF(MP_QSTR_super, (const byte*)"\xc4\x05" "super")
QDEF(MP_QSTR_symmetric_difference, (const byte*)"\xce\x14" "symmetric_difference")
QDEF(MP_QSTR_symmetric_difference_update, (const byte*)"\x60\x1b" "symmetric_difference_update")
QDEF(MP_QSTR_sync, (const byte*)"\xa2\x04" "sync")
QDEF(MP_QSTR_tan, (const byte*)"\xfe\x03" "tan")
QDEF(MP_QSTR_tanh, (const byte*)"\xd6\x04" "tanh")
QDEF(MP_QSTR_throw, (const byte*)"\xb3\x05" "throw")
QDEF(MP_QSTR_ticks_add, (const byte*)"\x9d\x09" "ticks_add")
QDEF(MP_QSTR_ticks_cpu, (const byte*)"\x1a\x09" "ticks_cpu")
QDEF(MP_QSTR_ticks_diff, (const byte*)"\xb1\x0a" "ticks_diff")
QDEF(MP_QSTR_ticks_ms, (const byte*)"\x42\x08" "ticks_ms")
QDEF(MP_QSTR_ticks_us, (const byte*)"\x5a\x08" "ticks_us")
QDEF(MP_QSTR_time, (const byte*)"\xf0\x04" "time")
QDEF(MP_QSTR_to_bytes, (const byte*)"\xd8\x08" "to_bytes")
QDEF(MP_QSTR_trunc, (const byte*)"\x5b\x05" "trunc")
QDEF(MP_QSTR_tuple, (const byte*)"\xfd\x05" "tuple")
QDEF(MP_QSTR_type, (const byte*)"\x9d\x04" "type")
QDEF(MP_QSTR_ubinascii, (const byte*)"\xc4\x09" "ubinascii")
QDEF(MP_QSTR_ucollections, (const byte*)"\x15\x0c" "ucollections")
QDEF(MP_QSTR_uctypes, (const byte*)"\xf8\x07" "uctypes")
QDEF(MP_QSTR_udelay, (const byte*)"\x25\x06" "udelay")
QDEF(MP_QSTR_uhashlib, (const byte*)"\x65\x08" "uhashlib")
QDEF(MP_QSTR_uheapq, (const byte*)"\x1d\x06" "uheapq")
QDEF(MP_QSTR_uio, (const byte*)"\xb6\x03" "uio")
QDEF(MP_QSTR_ujson, (const byte*)"\xe8\x05" "ujson")
QDEF(MP_QSTR_umachine, (const byte*)"\x95\x08" "umachine")
QDEF(MP_QSTR_unhexlify, (const byte*)"\xb1\x09" "unhexlify")
QDEF(MP_QSTR_uniform, (const byte*)"\x01\x07" "uniform")
QDEF(MP_QSTR_union, (const byte*)"\xf6\x05" "union")
QDEF(MP_QSTR_unique_id, (const byte*)"\x04\x09" "unique_id")
QDEF(MP_QSTR_update, (const byte*)"\xb4\x06" "update")
QDEF(MP_QSTR_upper, (const byte*)"\x27\x05" "upper")
QDEF(MP_QSTR_urandom, (const byte*)"\xab\x07" "urandom")
QDEF(MP_QSTR_ure, (const byte*)"\x87\x03" "ure")
QDEF(MP_QSTR_utime, (const byte*)"\xe5\x05" "utime")
QDEF(MP_QSTR_utimeq, (const byte*)"\xf4\x06" "utimeq")
QDEF(MP_QSTR_uzlib, (const byte*)"\x6d\x05" "uzlib")
QDEF(MP_QSTR_value, (const byte*)"\x4e\x05" "value")
QDEF(MP_QSTR_values, (const byte*)"\x7d\x06" "values")
QDEF(MP_QSTR_wfi, (const byte*)"\x9d\x03" "wfi")
QDEF(MP_QSTR_write, (const byte*)"\x98\x05" "write")
QDEF(MP_QSTR_zip, (const byte*)"\xe6\x03" "zip")
QDEF(MP_QSTR_ustruct, (const byte*)"\x47\x07" "ustruct")
QDEF(MP_QSTR_unpack, (const byte*)"\x07\x06" "unpack")
QDEF(MP_QSTR_unpack_from, (const byte*)"\x0e\x0b" "unpack_from")
QDEF(MP_QSTR_exit, (const byte*)"\x85\x04" "exit")
QDEF(MP_QSTR_byteorder, (const byte*)"\x61\x09" "byteorder")
QDEF(MP_QSTR_version_info, (const byte*)"\x6e\x0c" "version_info")
QDEF(MP_QSTR_sys, (const byte*)"\xbc\x03" "sys")
QDEF(MP_QSTR_fileno, (const byte*)"\x82\x06" "fileno")
QDEF(MP_QSTR_makefile, (const byte*)"\xc1\x08" "makefile")
QDEF(MP_QSTR_usocket, (const byte*)"\x75\x07" "usocket")
QDEF(MP_QSTR_getaddrinfo, (const byte*)"\x6e\x0b" "getaddrinfo")
QDEF(MP_QSTR_inet_pton, (const byte*)"\xc9\x09" "inet_pton")
QDEF(MP_QSTR_inet_ntop, (const byte*)"\x89\x09" "inet_ntop")
QDEF(MP_QSTR_sockaddr, (const byte*)"\x62\x08" "sockaddr")
QDEF(MP_QSTR_MSG_DONTROUTE, (const byte*)"\xeb\x0d" "MSG_DONTROUTE")
QDEF(MP_QSTR_MSG_DONTWAIT, (const byte*)"\x99\x0c" "MSG_DONTWAIT")
QDEF(MP_QSTR_SO_BROADCAST, (const byte*)"\xf9\x0c" "SO_BROADCAST")
QDEF(MP_QSTR_AF_UNIX, (const byte*)"\xf7\x07" "AF_UNIX")
QDEF(MP_QSTR_SO_ERROR, (const byte*)"\x3e\x08" "SO_ERROR")
QDEF(MP_QSTR_uos, (const byte*)"\xec\x03" "uos")
QDEF(MP_QSTR_stat, (const byte*)"\xd7\x04" "stat")
QDEF(MP_QSTR_statvfs, (const byte*)"\x14\x07" "statvfs")
QDEF(MP_QSTR_unlink, (const byte*)"\xfe\x06" "unlink")
QDEF(MP_QSTR_chdir, (const byte*)"\xb1\x05" "chdir")
QDEF(MP_QSTR_getcwd, (const byte*)"\x03\x06" "getcwd")
QDEF(MP_QSTR_dupterm, (const byte*)"\xaa\x07" "dupterm")
QDEF(MP_QSTR_umount, (const byte*)"\xdd\x06" "umount")
QDEF(MP_QSTR_uname, (const byte*)"\xb7\x05" "uname")
QDEF(MP_QSTR_sysname, (const byte*)"\x9b\x07" "sysname")
QDEF(MP_QSTR_unregister, (const byte*)"\x17\x0a" "unregister")
QDEF(MP_QSTR_uselect, (const byte*)"\x58\x07" "uselect")
QDEF(MP_QSTR_writeblocks, (const byte*)"\x02\x0b" "writeblocks")
QDEF(MP_QSTR_writebyte, (const byte*)"\xd2\x09" "writebyte")
QDEF(MP_QSTR_tell, (const byte*)"\x14\x04" "tell")
QDEF(MP_QSTR_listdir, (const byte*)"\x98\x07" "listdir")
QDEF(MP_QSTR_ilistdir, (const byte*)"\x71\x08" "ilistdir")
QDEF(MP_QSTR_mkdir, (const byte*)"\x9c\x05" "mkdir")
QDEF(MP_QSTR_VfsFat, (const byte*)"\x15\x06" "VfsFat")
QDEF(MP_QSTR_rename, (const byte*)"\x35\x06" "rename")
QDEF(MP_QSTR_rmdir, (const byte*)"\x45\x05" "rmdir")
QDEF(MP_QSTR_mkfs, (const byte*)"\x76\x04" "mkfs")
QDEF(MP_QSTR_socket, (const byte*)"\x60\x06" "socket")
QDEF(MP_QSTR_AF_INET6, (const byte*)"\x7d\x08" "AF_INET6")
QDEF(MP_QSTR_SOCK_STREAM, (const byte*)"\x32\x0b" "SOCK_STREAM")
QDEF(MP_QSTR_SOCK_DGRAM, (const byte*)"\xb3\x0a" "SOCK_DGRAM")
QDEF(MP_QSTR_SOCK_RAW, (const byte*)"\xca\x08" "SOCK_RAW")
QDEF(MP_QSTR_AF_INET, (const byte*)"\xeb\x07" "AF_INET")
QDEF(MP_QSTR_connect, (const byte*)"\xdb\x07" "connect")
QDEF(MP_QSTR_bind, (const byte*)"\x84\x04" "bind")
QDEF(MP_QSTR_listen, (const byte*)"\xcc\x06" "listen")
QDEF(MP_QSTR_accept, (const byte*)"\x85\x06" "accept")
QDEF(MP_QSTR_recv, (const byte*)"\xe7\x04" "recv")
QDEF(MP_QSTR_sendto, (const byte*)"\x22\x06" "sendto")
QDEF(MP_QSTR_recvfrom, (const byte*)"\x91\x08" "recvfrom")
QDEF(MP_QSTR_setsockopt, (const byte*)"\x38\x0a" "setsockopt")
QDEF(MP_QSTR_settimeout, (const byte*)"\xdc\x0a" "settimeout")
QDEF(MP_QSTR_setblocking, (const byte*)"\x6e\x0b" "setblocking")
QDEF(MP_QSTR_calcsize, (const byte*)"\x4d\x08" "calcsize")
QDEF(MP_QSTR_pack, (const byte*)"\xbc\x04" "pack")
QDEF(MP_QSTR_pack_into, (const byte*)"\x1f\x09" "pack_into")
QDEF(MP_QSTR_os, (const byte*)"\x79\x02" "os")
QDEF(MP_QSTR_zlib, (const byte*)"\xf8\x04" "zlib")
QDEF(MP_QSTR_hashlib, (const byte*)"\x10\x07" "hashlib")
QDEF(MP_QSTR_binascii, (const byte*)"\x91\x08" "binascii")
QDEF(MP_QSTR_collections, (const byte*)"\xe0\x0b" "collections")
QDEF(MP_QSTR_re, (const byte*)"\xd2\x02" "re")
QDEF(MP_QSTR_json, (const byte*)"\xfd\x04" "json")
QDEF(MP_QSTR_heapq, (const byte*)"\x68\x05" "heapq")
QDEF(MP_QSTR_path, (const byte*)"\x88\x04" "path")
QDEF(MP_QSTR_argv, (const byte*)"\xc7\x04" "argv")
QDEF(MP_QSTR_version, (const byte*)"\xbf\x07" "version")
QDEF(MP_QSTR_implementation, (const byte*)"\x17\x0e" "implementation")
QDEF(MP_QSTR_print_exception, (const byte*)"\x1c\x0f" "print_exception")
QDEF(MP_QSTR_uerrno, (const byte*)"\xb4\x06" "uerrno")
QDEF(MP_QSTR_errno, (const byte*)"\xc1\x05" "errno")
QDEF(MP_QSTR_errorcode, (const byte*)"\x10\x09" "errorcode")
QDEF(MP_QSTR_EPERM, (const byte*)"\xea\x05" "EPERM")
QDEF(MP_QSTR_ENOBUFS, (const byte*)"\xe3\x07" "ENOBUFS")
QDEF(MP_QSTR_ENODEV, (const byte*)"\xb6\x06" "ENODEV")
QDEF(MP_QSTR_ENOENT, (const byte*)"\x5e\x06" "ENOENT")
QDEF(MP_QSTR_ENOMEM, (const byte*)"\xa4\x06" "ENOMEM")
QDEF(MP_QSTR_ENOTCONN, (const byte*)"\x79\x08" "ENOTCONN")
QDEF(MP_QSTR_EOPNOTSUPP, (const byte*)"\xac\x0a" "EOPNOTSUPP")
QDEF(MP_QSTR_ETIMEDOUT, (const byte*)"\xff\x09" "ETIMEDOUT")
QDEF(MP_QSTR_EIO, (const byte*)"\x86\x03" "EIO")
QDEF(MP_QSTR_EBADF, (const byte*)"\x61\x05" "EBADF")
QDEF(MP_QSTR_EAGAIN, (const byte*)"\x20\x06" "EAGAIN")
QDEF(MP_QSTR_EACCES, (const byte*)"\x37\x06" "EACCES")
QDEF(MP_QSTR_EEXIST, (const byte*)"\x53\x06" "EEXIST")
QDEF(MP_QSTR_EISDIR, (const byte*)"\xa5\x06" "EISDIR")
QDEF(MP_QSTR_EINVAL, (const byte*)"\x5c\x06" "EINVAL")
QDEF(MP_QSTR_EADDRINUSE, (const byte*)"\x17\x0a" "EADDRINUSE")
QDEF(MP_QSTR_ECONNABORTED, (const byte*)"\x27\x0c" "ECONNABORTED")
QDEF(MP_QSTR_ECONNREFUSED, (const byte*)"\x3a\x0c" "ECONNREFUSED")
QDEF(MP_QSTR_ECONNRESET, (const byte*)"\x19\x0a" "ECONNRESET")
QDEF(MP_QSTR_EHOSTUNREACH, (const byte*)"\x86\x0c" "EHOSTUNREACH")
QDEF(MP_QSTR_EALREADY, (const byte*)"\x46\x08" "EALREADY")
QDEF(MP_QSTR_EINPROGRESS, (const byte*)"\x9a\x0b" "EINPROGRESS")
QDEF(MP_QSTR_ussl, (const byte*)"\x1c\x04" "ussl")
QDEF(MP_QSTR_ssl, (const byte*)"\xe9\x03" "ssl")
QDEF(MP_QSTR_wrap_socket, (const byte*)"\xcb\x0b" "wrap_socket")
QDEF(MP_QSTR_getpeercert, (const byte*)"\xb1\x0b" "getpeercert")
QDEF(MP_QSTR_cert, (const byte*)"\x25\x04" "cert")
QDEF(MP_QSTR_server_side, (const byte*)"\x64\x0b" "server_side")
QDEF(MP_QSTR_server_hostname, (const byte*)"\x58\x0f" "server_hostname")
QDEF(MP_QSTR_readlines, (const byte*)"\x6a\x09" "readlines")
QDEF(MP_QSTR_decode, (const byte*)"\xa9\x06" "decode")
QDEF(MP_QSTR_delattr, (const byte*)"\xdb\x07" "delattr")
QDEF(MP_QSTR_FileIO, (const byte*)"\xc5\x06" "FileIO")
QDEF(MP_QSTR_TextIOWrapper, (const byte*)"\xad\x0d" "TextIOWrapper")
QDEF(MP_QSTR_io, (const byte*)"\x23\x02" "io")
QDEF(MP_QSTR_stdin, (const byte*)"\x21\x05" "stdin")
QDEF(MP_QSTR_stdout, (const byte*)"\x08\x06" "stdout")
QDEF(MP_QSTR_stderr, (const byte*)"\xa3\x06" "stderr")
QDEF(MP_QSTR_platform, (const byte*)"\x3a\x08" "platform")
QDEF(MP_QSTR_deque, (const byte*)"\x05\x05" "deque")
QDEF(MP_QSTR_select, (const byte*)"\x8d\x06" "select")
QDEF(MP_QSTR_poll, (const byte*)"\x9a\x04" "poll")
QDEF(MP_QSTR_POLLERR, (const byte*)"\xdf\x07" "POLLERR")
QDEF(MP_QSTR_POLLHUP, (const byte*)"\x77\x07" "POLLHUP")
QDEF(MP_QSTR_POLLIN, (const byte*)"\x7d\x06" "POLLIN")
QDEF(MP_QSTR_POLLOUT, (const byte*)"\x74\x07" "POLLOUT")
QDEF(MP_QSTR_ipoll, (const byte*)"\x53\x05" "ipoll")
QDEF(MP_QSTR_register, (const byte*)"\xac\x08" "register")
QDEF(MP_QSTR_modify, (const byte*)"\xf5\x06" "modify")
QDEF(MP_QSTR_SOL_SOCKET, (const byte*)"\x0f\x0a" "SOL_SOCKET")
QDEF(MP_QSTR_SO_REUSEADDR, (const byte*)"\x21\x0c" "SO_REUSEADDR")
QDEF(MP_QSTR_pend_throw, (const byte*)"\xf3\x0a" "pend_throw")
QDEF(MP_QSTR__space_, (const byte*)"\x85\x01" " ")
QDEF(MP_QSTR_encode, (const byte*)"\x43\x06" "encode")
QDEF(MP_QSTR_nodename, (const byte*)"\x62\x08" "nodename")
QDEF(MP_QSTR_file, (const byte*)"\xc3\x04" "file")
QDEF(MP_QSTR_r, (const byte*)"\xd7\x01" "r")
QDEF(MP_QSTR_buffering, (const byte*)"\x25\x09" "buffering")
QDEF(MP_QSTR_encoding, (const byte*)"\x06\x08" "encoding")
QDEF(MP_QSTR___dict__, (const byte*)"\x7f\x08" "__dict__")
QDEF(MP_QSTR_release, (const byte*)"\xec\x07" "release")
QDEF(MP_QSTR_iterable, (const byte*)"\x25\x08" "iterable")
QDEF(MP_QSTR_quit, (const byte*)"\x5c\x04" "quit")
QDEF(MP_QSTR_addr, (const byte*)"\xb6\x04" "addr")
QDEF(MP_QSTR_addrsize, (const byte*)"\x93\x08" "addrsize")
QDEF(MP_QSTR_I2C, (const byte*)"\x5d\x03" "I2C")
QDEF(MP_QSTR_memaddr, (const byte*)"\x93\x07" "memaddr")
QDEF(MP_QSTR_readfrom_into, (const byte*)"\x82\x0d" "readfrom_into")
QDEF(MP_QSTR_readfrom_mem, (const byte*)"\x3b\x0c" "readfrom_mem")
QDEF(MP_QSTR_readfrom_mem_into, (const byte*)"\x38\x11" "readfrom_mem_into")
QDEF(MP_QSTR_readfrom, (const byte*)"\x41\x08" "readfrom")
QDEF(MP_QSTR_scan, (const byte*)"\x1a\x04" "scan")
QDEF(MP_QSTR_sck, (const byte*)"\xfe\x03" "sck")
QDEF(MP_QSTR_scl, (const byte*)"\xf9\x03" "scl")
QDEF(MP_QSTR_sda, (const byte*)"\x53\x03" "sda")
QDEF(MP_QSTR_arg, (const byte*)"\x91\x03" "arg")
QDEF(MP_QSTR_timeout, (const byte*)"\x3e\x07" "timeout")
QDEF(MP_QSTR_writeto_mem, (const byte*)"\x79\x0b" "writeto_mem")
QDEF(MP_QSTR_writeto, (const byte*)"\x03\x07" "writeto")
QDEF(MP_QSTR_deinit, (const byte*)"\x9e\x06" "deinit")
QDEF(MP_QSTR_firstbit, (const byte*)"\x20\x08" "firstbit")
QDEF(MP_QSTR_mosi, (const byte*)"\x1d\x04" "mosi")
QDEF(MP_QSTR_polarity, (const byte*)"\x41\x08" "polarity")
QDEF(MP_QSTR_SPI, (const byte*)"\xef\x03" "SPI")
QDEF(MP_QSTR_baudrate, (const byte*)"\xf5\x08" "baudrate")
QDEF(MP_QSTR_bits, (const byte*)"\x49\x04" "bits")
QDEF(MP_QSTR_miso, (const byte*)"\x9d\x04" "miso")
QDEF(MP_QSTR_MSB, (const byte*)"\x59\x03" "MSB")
QDEF(MP_QSTR_SoftSPI, (const byte*)"\x21\x07" "SoftSPI")
QDEF(MP_QSTR_write_readinto, (const byte*)"\x89\x0e" "write_readinto")
QDEF(MP_QSTR_LSB, (const byte*)"\xd8\x03" "LSB")
QDEF(MP_QSTR__thread, (const byte*)"\xd4\x07" "_thread")
QDEF(MP_QSTR_acquire, (const byte*)"\x1d\x07" "acquire")
QDEF(MP_QSTR_locked, (const byte*)"\x0f\x06" "locked")
QDEF(MP_QSTR_lock, (const byte*)"\xae\x04" "lock")
QDEF(MP_QSTR_LockType, (const byte*)"\x36\x08" "LockType")
QDEF(MP_QSTR_get_ident, (const byte*)"\xfe\x09" "get_ident")
QDEF(MP_QSTR_stack_size, (const byte*)"\x31\x0a" "stack_size")
QDEF(MP_QSTR_start_new_thread, (const byte*)"\xd7\x10" "start_new_thread")
QDEF(MP_QSTR_allocate_lock, (const byte*)"\xec\x0d" "allocate_lock")
QDEF(MP_QSTR_UART, (const byte*)"\xb7\x04" "UART")
QDEF(MP_QSTR_writechar, (const byte*)"\x40\x09" "writechar")
QDEF(MP_QSTR_readchar, (const byte*)"\xef\x08" "readchar")
QDEF(MP_QSTR_sendbreak, (const byte*)"\xc6\x09" "sendbreak")
QDEF(MP_QSTR_RTS, (const byte*)"\xb0\x03" "RTS")
QDEF(MP_QSTR_CTS, (const byte*)"\x61\x03" "CTS")
QDEF(MP_QSTR_parity, (const byte*)"\x42\x06" "parity")
QDEF(MP_QSTR_flow, (const byte*)"\x37\x04" "flow")
QDEF(MP_QSTR_timeout_char, (const byte*)"\x79\x0c" "timeout_char")
QDEF(MP_QSTR_read_buf_len, (const byte*)"\xa1\x0c" "read_buf_len")
QDEF(MP_QSTR_mktime, (const byte*)"\x96\x06" "mktime")
QDEF(MP_QSTR_localtime, (const byte*)"\x7d\x09" "localtime")
QDEF(MP_QSTR_IPPROTO_IP, (const byte*)"\x0c\x0a" "IPPROTO_IP")
QDEF(MP_QSTR_IPPROTO_ICMP, (const byte*)"\xa2\x0c" "IPPROTO_ICMP")
QDEF(MP_QSTR_IPPROTO_IPV4, (const byte*)"\x2e\x0c" "IPPROTO_IPV4")
QDEF(MP_QSTR_IPPROTO_TCP, (const byte*)"\xb2\x0b" "IPPROTO_TCP")
QDEF(MP_QSTR_IPPROTO_UDP, (const byte*)"\x54\x0b" "IPPROTO_UDP")
QDEF(MP_QSTR_IPPROTO_IPV6, (const byte*)"\x2c\x0c" "IPPROTO_IPV6")
QDEF(MP_QSTR_IPPROTO_RAW, (const byte*)"\xf1\x0b" "IPPROTO_RAW")
QDEF(MP_QSTR_websocket, (const byte*)"\x90\x09" "websocket")
QDEF(MP_QSTR__webrepl, (const byte*)"\x21\x08" "_webrepl")
QDEF(MP_QSTR_ioctl, (const byte*)"\x78\x05" "ioctl")
QDEF(MP_QSTR_password, (const byte*)"\x9a\x08" "password")
QDEF(MP_QSTR_rb, (const byte*)"\xd5\x02" "rb")
QDEF(MP_QSTR_wb, (const byte*)"\x70\x02" "wb")
QDEF(MP_QSTR_IP_ADD_MEMBERSHIP, (const byte*)"\x6f\x11" "IP_ADD_MEMBERSHIP")
QDEF(MP_QSTR_sendall, (const byte*)"\x38\x07" "sendall")
QDEF(MP_QSTR_sha1, (const byte*)"\x8e\x04" "sha1")
QDEF(MP_QSTR_readbit, (const byte*)"\x08\x07" "readbit")
QDEF(MP_QSTR_readbyte, (const byte*)"\x7d\x08" "readbyte")
QDEF(MP_QSTR_writebit, (const byte*)"\xc7\x08" "writebit")
QDEF(MP_QSTR_flags, (const byte*)"\xfa\x05" "flags")
QDEF(MP_QSTR_trigger, (const byte*)"\x9d\x07" "trigger")
QDEF(MP_QSTR_handler, (const byte*)"\xdd\x07" "handler")
QDEF(MP_QSTR_crc8, (const byte*)"\xcf\x04" "crc8")
QDEF(MP_QSTR_hard, (const byte*)"\xda\x04" "hard")
QDEF(MP_QSTR_irq, (const byte*)"\x8f\x03" "irq")
QDEF(MP_QSTR_onewire, (const byte*)"\x28\x07" "onewire")
QDEF(MP_QSTR___dir__, (const byte*)"\x7a\x07" "__dir__")
QDEF(MP_QSTR___int__, (const byte*)"\x16\x07" "__int__")
QDEF(MP_QSTR_schedule, (const byte*)"\xe0\x08" "schedule")
QDEF(MP_QSTR_SHORT, (const byte*)"\xf7\x05" "SHORT")
QDEF(MP_QSTR_USHORT, (const byte*)"\xa2\x06" "USHORT")
QDEF(MP_QSTR_INT, (const byte*)"\x36\x03" "INT")
QDEF(MP_QSTR_UINT, (const byte*)"\x23\x04" "UINT")
QDEF(MP_QSTR_LONG, (const byte*)"\x0f\x04" "LONG")
QDEF(MP_QSTR_ULONG, (const byte*)"\x7a\x05" "ULONG")
QDEF(MP_QSTR_LONGLONG, (const byte*)"\x85\x08" "LONGLONG")
QDEF(MP_QSTR_ULONGLONG, (const byte*)"\x70\x09" "ULONGLONG")
QDEF(MP_QSTR_ffi, (const byte*)"\x8c\x03" "ffi")
QDEF(MP_QSTR_callback, (const byte*)"\x4c\x08" "callback")
QDEF(MP_QSTR_func, (const byte*)"\x1b\x04" "func")
QDEF(MP_QSTR_as_bytearray, (const byte*)"\x1b\x0c" "as_bytearray")
QDEF(MP_QSTR_var, (const byte*)"\xe0\x03" "var")
QDEF(MP_QSTR_ffimod, (const byte*)"\xca\x06" "ffimod")
QDEF(MP_QSTR_ffifunc, (const byte*)"\x92\x07" "ffifunc")
QDEF(MP_QSTR_fficallback, (const byte*)"\xc5\x0b" "fficallback")
QDEF(MP_QSTR_ffivar, (const byte*)"\x49\x06" "ffivar")
QDEF(MP_QSTR_ADC, (const byte*)"\x63\x03" "ADC")
QDEF(MP_QSTR_Lpower, (const byte*)"\x76\x06" "Lpower")
QDEF(MP_QSTR_feed, (const byte*)"\xa7\x04" "feed")
QDEF(MP_QSTR_WDT, (const byte*)"\x62\x03" "WDT")
QDEF(MP_QSTR_create_event, (const byte*)"\x12\x0c" "create_event")
QDEF(MP_QSTR_delete_event, (const byte*)"\xcf\x0c" "delete_event")
QDEF(MP_QSTR_send_event, (const byte*)"\x2a\x0a" "send_event")
QDEF(MP_QSTR_recv_event, (const byte*)"\xf4\x0a" "recv_event")
QDEF(MP_QSTR_set_tick_ms, (const byte*)"\x6c\x0b" "set_tick_ms")
QDEF(MP_QSTR_set_pri, (const byte*)"\xf3\x07" "set_pri")
QDEF(MP_QSTR_test_Event_t, (const byte*)"\x4b\x0c" "test_Event_t")
QDEF(MP_QSTR_resolution, (const byte*)"\x8b\x0a" "resolution")
QDEF(MP_QSTR_PWM, (const byte*)"\x4f\x03" "PWM")
QDEF(MP_QSTR_duty, (const byte*)"\x19\x04" "duty")
QDEF(MP_QSTR_getall, (const byte*)"\x72\x06" "getall")
QDEF(MP_QSTR_system, (const byte*)"\xa0\x06" "system")
QDEF(MP_QSTR_getenv, (const byte*)"\xae\x06" "getenv")
QDEF(MP_QSTR_settime, (const byte*)"\x12\x07" "settime")
QDEF(MP_QSTR_setdate, (const byte*)"\x33\x07" "setdate")
QDEF(MP_QSTR_setalarm, (const byte*)"\x34\x08" "setalarm")
QDEF(MP_QSTR_RTC, (const byte*)"\xa0\x03" "RTC")
QDEF(MP_QSTR_pm_request, (const byte*)"\x76\x0a" "pm_request")
QDEF(MP_QSTR_pm, (const byte*)"\x18\x02" "pm")
QDEF(MP_QSTR_device, (const byte*)"\x3d\x06" "device")
QDEF(MP_QSTR_motor, (const byte*)"\xce\x05" "motor")
QDEF(MP_QSTR_Motor, (const byte*)"\xee\x05" "Motor")
QDEF(MP_QSTR_islocked, (const byte*)"\xb5\x08" "islocked")
QDEF(MP_QSTR_wakeup, (const byte*)"\x78\x06" "wakeup")
QDEF(MP_QSTR_modelname, (const byte*)"\xed\x09" "modelname")
QDEF(MP_QSTR_gettouchid, (const byte*)"\x9b\x0a" "gettouchid")
QDEF(MP_QSTR_TouchKey, (const byte*)"\x97\x08" "TouchKey")
QDEF(MP_QSTR_istouched, (const byte*)"\x9b\x09" "istouched")
QDEF(MP_QSTR_delete_model, (const byte*)"\xc\x0c" "delete_model")
QDEF(MP_QSTR_auto_verify, (const byte*)"\x62\x0b" "auto_verify")
QDEF(MP_QSTR_auto_enroll, (const byte*)"\x3\x0b" "auto_enroll")
QDEF(MP_QSTR_image_forma, (const byte*)"\x4a\x0b" "image_forma")
QDEF(MP_QSTR_score_level, (const byte*)"\xa4\x0b" "score_level")
QDEF(MP_QSTR_enroll_times, (const byte*)"\xaa\x0c" "enroll_times")
QDEF(MP_QSTR_enroll_logic, (const byte*)"\x62\x0c" "enroll_logic")
QDEF(MP_QSTR_collect_enroll_image, (const byte*)"\xa\x14" "collect_enroll_image")
QDEF(MP_QSTR_collect_verify_image, (const byte*)"\x6b\x14" "collect_verify_image")
QDEF(MP_QSTR_get_image, (const byte*)"\x2b\x09" "get_image")
QDEF(MP_QSTR_put_image, (const byte*)"\x6c\x09" "put_image")
QDEF(MP_QSTR_gen_char, (const byte*)"\x4e\x08" "gen_char")
QDEF(MP_QSTR_gen_model, (const byte*)"\xf9\x09" "gen_model")
QDEF(MP_QSTR_store_model, (const byte*)"\x8a\x0b" "store_model")
QDEF(MP_QSTR_get_model, (const byte*)"\xe3\x09" "get_model")
QDEF(MP_QSTR_put_model, (const byte*)"\xa4\x09" "put_model")
QDEF(MP_QSTR_model_info, (const byte*)"\x7b\x0a" "model_info")
QDEF(MP_QSTR_match_outside, (const byte*)"\x9c\x0d" "match_outside")
QDEF(MP_QSTR_match_inside, (const byte*)"\xd5\x0c" "match_inside")
QDEF(MP_QSTR_led_control, (const byte*)"\xf0\x0b" "led_control")
QDEF(MP_QSTR_ENROLL_LOGIC_NONE, (const byte*)"\xd7\x11" "ENROLL_LOGIC_NONE")
QDEF(MP_QSTR_ENROLL_LOGIC_RELATED, (const byte*)"\xd2\x14" "ENROLL_LOGIC_RELATED")
QDEF(MP_QSTR_ENROLL_LOGIC_UNRELATED, (const byte*)"\x9\x16" "ENROLL_LOGIC_UNRELATED")
QDEF(MP_QSTR_SCORE_LEVEL1, (const byte*)"\x95\x0c" "SCORE_LEVEL1")
QDEF(MP_QSTR_SCORE_LEVEL2, (const byte*)"\x96\x0c" "SCORE_LEVEL2")
QDEF(MP_QSTR_SCORE_LEVEL3, (const byte*)"\x97\x0c" "SCORE_LEVEL3")
QDEF(MP_QSTR_SCORE_LEVEL4, (const byte*)"\x90\x0c" "SCORE_LEVEL4")
QDEF(MP_QSTR_SCORE_LEVEL5, (const byte*)"\x91\x0c" "SCORE_LEVEL5")
QDEF(MP_QSTR_IMAGE_NORMAL, (const byte*)"\x4e\x0c" "IMAGE_NORMAL")
QDEF(MP_QSTR_IMAGE_PREPROCESSED, (const byte*)"\xf0\x12" "IMAGE_PREPROCESSED")
QDEF(MP_QSTR_Finger, (const byte*)"\x94\x06" "Finger")
QDEF(MP_QSTR_match_info, (const byte*)"\xe7\x0a" "match_info")
QDEF(MP_QSTR_search_char, (const byte*)"\xc\x0b" "search_char")
QDEF(MP_QSTR_autocheck, (const byte*)"\x2c\x09" "autocheck")
QDEF(MP_QSTR_autocheck_exit, (const byte*)"\x73\x0e" "autocheck_exit")
QDEF(MP_QSTR_checkcard_dirction, (const byte*)"\x88\x18" "checkcard_dirction")
QDEF(MP_QSTR_readfifo, (const byte*)"\xb1\x08" "readfifo")
QDEF(MP_QSTR_writefifo, (const byte*)"\x9e\x09" "writefifo")
QDEF(MP_QSTR_getintensity, (const byte*)"\xfc\x0c" "getintensity")
QDEF(MP_QSTR_RFID, (const byte*)"\xbc\x04" "RFID")
QDEF(MP_QSTR_light, (const byte*)"\xfb\x05" "light")
QDEF(MP_QSTR_contrast, (const byte*)"\x7\x08" "contrast")
QDEF(MP_QSTR_fill, (const byte*)"\xca\x04" "fill")
QDEF(MP_QSTR_pixel, (const byte*)"\x4d\x05" "pixel")
QDEF(MP_QSTR_text, (const byte*)"\x98\x04" "text")
QDEF(MP_QSTR_scroll, (const byte*)"\x28\x06" "scroll")
QDEF(MP_QSTR_scroll_stop, (const byte*)"\xef\x0b" "scroll_stop")
QDEF(MP_QSTR_OLED, (const byte*)"\x87\x04" "OLED")
QDEF(MP_QSTR_getmatrix, (const byte*)"\x68\x09" "getmatrix")
QDEF(MP_QSTR_FontLib, (const byte*)"\x51\x07" "FontLib")
QDEF(MP_QSTR_w, (const byte*)"\xd2\x01" "w")
QDEF(MP_QSTR_h, (const byte*)"\xcd\x01" "h")
QDEF(MP_QSTR_arrmode, (const byte*)"\x67\x07" "arrmode")
QDEF(MP_QSTR_sequence, (const byte*)"\x5a\x08" "sequence")
QDEF(MP_QSTR_VERTICAL_CROSS, (const byte*)"\x56\x0e" "VERTICAL_CROSS")
QDEF(MP_QSTR_VERTICAL_VERTIC, (const byte*)"\x97\x0f" "VERTICAL_VERTIC")
QDEF(MP_QSTR_CROSS_VERTICAL, (const byte*)"\xb6\x0e" "CROSS_VERTICAL")
QDEF(MP_QSTR_CROSS_CROSS, (const byte*)"\xda\x0b" "CROSS_CROSS")
QDEF(MP_QSTR_HIGH_FIRST, (const byte*)"\xe\x10" "HIGH_FIRST")
QDEF(MP_QSTR_LOW_FIRST, (const byte*)"\xb4\x09" "LOW_FIRST")
QDEF(MP_QSTR_ARIAL, (const byte*)"\xd2\x05" "ARIAL")
QDEF(MP_QSTR_TNROMAN, (const byte*)"\xe0\x07" "TNROMAN")
QDEF(MP_QSTR_NORMAL, (const byte*)"\xf6\x06" "NORMAL")
QDEF(MP_QSTR_BLOD, (const byte*)"\x60\x04" "BLOD")
QDEF(MP_QSTR_SONGTYPE, (const byte*)"\x28\x08" "SONGTYPE")
QDEF(MP_QSTR_RIGHT, (const byte*)"\xc5\x05" "RIGHT")
QDEF(MP_QSTR_LEFT, (const byte*)"\x9e\x04" "LEFT")
QDEF(MP_QSTR_col, (const byte*)"\x65\x03" "col")
QDEF(MP_QSTR_circle, (const byte*)"\xb7\x06" "circle")
QDEF(MP_QSTR_BLUE, (const byte*)"\x3b\x04" "BLUE")
QDEF(MP_QSTR_YELLOW, (const byte*)"\x41\x06" "YELLOW")
QDEF(MP_QSTR_ON, (const byte*)"\x64\x02" "ON")
QDEF(MP_QSTR_OFF, (const byte*)"\xaa\x03" "OFF")
QDEF(MP_QSTR_HORIZONTAL_R, (const byte*)"\xd6\x0c" "HORIZONTAL_R")
QDEF(MP_QSTR_HORIZONTAL_L, (const byte*)"\xc8\x0c" "HORIZONTAL_L")
QDEF(MP_QSTR_VERTICAL_D, (const byte*)"\xec\x0a" "VERTICAL_D")
QDEF(MP_QSTR_VERTICAL_U, (const byte*)"\xfd\x0a" "VERTICAL_U")
QDEF(MP_QSTR_getformat, (const byte*)"\x50\x09" "getformat")
QDEF(MP_QSTR_setformat, (const byte*)"\x44\x09" "setformat")
QDEF(MP_QSTR_ASCII, (const byte*)"\x74\x05" "ASCII")
QDEF(MP_QSTR_CHINA, (const byte*)"\xe8\x05" "CHINA")
QDEF(MP_QSTR_Voice, (const byte*)"\xb3\x05" "Voice")
QDEF(MP_QSTR_volume, (const byte*)"\x6d\x06" "volume")
QDEF(MP_QSTR_playstart, (const byte*)"\xe1\x09" "playstart")
QDEF(MP_QSTR_playstop, (const byte*)"\xb9\x08" "playstop")
QDEF(MP_QSTR_playloop, (const byte*)"\x5d\x08" "playloop")
QDEF(MP_QSTR_playsequence, (const byte*)"\x7e\x0c" "playsequence")
QDEF(MP_QSTR_getstate, (const byte*)"\xe4\x08" "getstate")
QDEF(MP_QSTR_times, (const byte*)"\x83\x05" "times")
QDEF(MP_QSTR_silence_time, (const byte*)"\xd4\x0c" "silence_time")
QDEF(MP_QSTR_SESecure, (const byte*)"\x84\x08" "SESecure")
QDEF(MP_QSTR_nfc_external_auth, (const byte*)"\x7b\x11" "nfc_external_auth")
QDEF(MP_QSTR_nfc_se_random, (const byte*)"\x63\x0d" "nfc_se_random")
QDEF(MP_QSTR_nfc_internal_auth, (const byte*)"\x21\x11" "nfc_internal_auth")
QDEF(MP_QSTR_nfc_nfc_getkey, (const byte*)"\x44\x0e" "nfc_nfc_getkey")
QDEF(MP_QSTR_nfc_deletekey, (const byte*)"\x9f\x0d" "nfc_deletekey")
QDEF(MP_QSTR_pin_writekey, (const byte*)"\xe7\x0c" "pin_writekey")
QDEF(MP_QSTR_pin_deletekey, (const byte*)"\xa3\x0d" "pin_deletekey")
QDEF(MP_QSTR_pin_verify_perpetual, (const byte*)"\xbb\x14" "pin_verify_perpetual")
QDEF(MP_QSTR_pin_verify_adminpin, (const byte*)"\xdd\x13" "pin_verify_adminpin")
QDEF(MP_QSTR_pin_verify_dynamic, (const byte*)"\x90\x12" "pin_verify_dynamic")
QDEF(MP_QSTR_pin_change_adminpin, (const byte*)"\x8c\x13" "pin_change_adminpin")
QDEF(MP_QSTR_pin_clear_adminstate, (const byte*)"\x13\x14" "pin_clear_adminstate")
QDEF(MP_QSTR_wrap, (const byte*)"\x51\x04" "wrap")
QDEF(MP_QSTR_unwrap, (const byte*)"\x6a\x06" "unwrap")
QDEF(MP_QSTR_mac, (const byte*)"\xaa\x03" "mac")
QDEF(MP_QSTR_ble_external_auth, (const byte*)"\x3b\x11" "ble_external_auth")
QDEF(MP_QSTR_get_tid, (const byte*)"\x15\x07" "get_tid")

QDEF(MP_QSTR_isready, (const byte*)"\x94\x07" "isready")

QDEF(MP_QSTR_DATA_READY, (const byte*)"\xc1\x0a" "DATA_READY")
QDEF(MP_QSTR_SAMPLE_200MS, (const byte*)"\xb0\x0c" "SAMPLE_200MS")
QDEF(MP_QSTR_SAMPLE_500MS, (const byte*)"\x37\x0c" "SAMPLE_500MS")
QDEF(MP_QSTR_SAMPLE_1S, (const byte*)"\x7e\x09" "SAMPLE_1S")
QDEF(MP_QSTR_SAMPLE_10S, (const byte*)"\xee\x0a" "SAMPLE_10S")
QDEF(MP_QSTR_SAMPLE_20S, (const byte*)"\x6d\x0a" "SAMPLE_20S")
QDEF(MP_QSTR_SAMPLE_60S, (const byte*)"\x69\x0a" "SAMPLE_60S")
QDEF(MP_QSTR_SAMPLE_120S, (const byte*)"\xfc\x0b" "SAMPLE_120S")
QDEF(MP_QSTR_TEMPERATURE, (const byte*)"\x89\x0b" "TEMPERATURE")
QDEF(MP_QSTR_HUMIDITY, (const byte*)"\xbc\x08" "HUMIDITY")
QDEF(MP_QSTR_irqomde, (const byte*)"\xec\x07" "irqomde")
QDEF(MP_QSTR_t_low, (const byte*)"\xba\x05" "t_low")
QDEF(MP_QSTR_t_high, (const byte*)"\x80\x06" "t_high")
QDEF(MP_QSTR_h_low, (const byte*)"\xa6\x05" "h_low")
QDEF(MP_QSTR_h_high, (const byte*)"\x1c\x06" "h_high")
QDEF(MP_QSTR_Humiture, (const byte*)"\x8a\x08" "Humiture")
QDEF(MP_QSTR_Battery, (const byte*)"\xc8\x07" "Battery")
QDEF(MP_QSTR_power, (const byte*)"\xda\x05" "power")
QDEF(MP_QSTR_RSSI_DELTA, (const byte*)"\xf9\x0a" "RSSI_DELTA")
QDEF(MP_QSTR_RSSI_ABS, (const byte*)"\x91\x08" "RSSI_ABS")
QDEF(MP_QSTR_RSSI_DELTA_AND_ABS, (const byte*)"\xa2\x12" "RSSI_DELTA_AND_ABS")
QDEF(MP_QSTR_RSSI_DELTA_OR_ABD, (const byte*)"\x83\x11" "RSSI_DELTA_OR_ABD")
QDEF(MP_QSTR_ADC_100MS, (const byte*)"\x53\x09" "ADC_100MS")
QDEF(MP_QSTR_ADC_200MS, (const byte*)"\xd0\x09" "ADC_200MS")
QDEF(MP_QSTR_ADC_300MS, (const byte*)"\xd1\x09" "ADC_300MS")
QDEF(MP_QSTR_ADC_400MS, (const byte*)"\x56\x09" "ADC_400MS")
QDEF(MP_QSTR_ADC_500MS, (const byte*)"\x57\x09" "ADC_500MS")
QDEF(MP_QSTR_ADC_600MS, (const byte*)"\xd4\x09" "ADC_600MS")
QDEF(MP_QSTR_ADC_800MS, (const byte*)"\x5a\x09" "ADC_800MS")
QDEF(MP_QSTR_ADC_1000MS, (const byte*)"\x3\x0a" "ADC_1000MS")
QDEF(MP_QSTR_ADC_COUNT_2, (const byte*)"\xf2\x0b" "ADC_COUNT_2")
QDEF(MP_QSTR_ADC_COUNT_4, (const byte*)"\xf4\x0b" "ADC_COUNT_4")
QDEF(MP_QSTR_ADC_COUNT_8, (const byte*)"\xf8\x0b" "ADC_COUNT_8")
QDEF(MP_QSTR_ADC_COUNT_16, (const byte*)"\x27\x0c" "ADC_COUNT_16")
QDEF(MP_QSTR_adc_period, (const byte*)"\x59\x0a" "adc_period")
QDEF(MP_QSTR_adc_count, (const byte*)"\x3f\x09" "adc_count")
QDEF(MP_QSTR_delta, (const byte*)"\xfd\x05" "delta")
QDEF(MP_QSTR_ref, (const byte*)"\x74\x03" "ref")
QDEF(MP_QSTR_Bluetooth, (const byte*)"\x33\x09" "Bluetooth")
QDEF(MP_QSTR_broadcastdata, (const byte*)"\x2a\x0d" "broadcastdata")
QDEF(MP_QSTR_connectstate, (const byte*)"\x4c\x0c" "connectstate")
QDEF(MP_QSTR_erase_information, (const byte*)"\xd6\x11" "erase_information")
QDEF(MP_QSTR_lplevel, (const byte*)"\xcf\x07" "lplevel")
QDEF(MP_QSTR_lpwakeup, (const byte*)"\xe4\x08" "lpwakeup")
QDEF(MP_QSTR_mastername, (const byte*)"\x9e\x0a" "mastername")
QDEF(MP_QSTR_matchcode, (const byte*)"\x3b\x09" "matchcode")
QDEF(MP_QSTR_attribute, (const byte*)"\xd9\x09" "attribute")
QDEF(MP_QSTR_DISCONNECT, (const byte*)"\x65\x0a" "DISCONNECT")
QDEF(MP_QSTR_LPNORMAL, (const byte*)"\x2a\x08" "LPNORMAL")
QDEF(MP_QSTR_LPMEDIUM, (const byte*)"\xc4\x08" "LPMEDIUM")
QDEF(MP_QSTR_LPLOWEST, (const byte*)"\xcf\x08" "LPLOWEST")
QDEF(MP_QSTR_Flash, (const byte*)"\x95\x05" "Flash")
QDEF(MP_QSTR_diskinfo, (const byte*)"\xde\x08" "diskinfo")
QDEF(MP_QSTR_addr_read, (const byte*)"\xdb\x09" "addr_read")
QDEF(MP_QSTR_addr_write, (const byte*)"\xf4\x0a" "addr_write")
QDEF(MP_QSTR_addr_erase, (const byte*)"\x49\x0a" "addr_erase")
QDEF(MP_QSTR_dymcode, (const byte*)"\x58\x07" "dymcode")
QDEF(MP_QSTR_TYPE_A, (const byte*)"\xa3\x06" "TYPE_A")
QDEF(MP_QSTR_TYPE_B, (const byte*)"\xa0\x06" "TYPE_B")
QDEF(MP_QSTR_getuid, (const byte*)"\xcb\x06" "getuid")
QDEF(MP_QSTR_checkcard, (const byte*)"\x57\x09" "checkcard")
QDEF(MP_QSTR_rfid_type, (const byte*)"\xbb\x09" "rfid_type")
QDEF(MP_QSTR_threshold, (const byte*)"\xf2\x09" "threshold")
QDEF(MP_QSTR_OneNET, (const byte*)"\x3e\x06" "OneNET")
QDEF(MP_QSTR_onenet, (const byte*)"\x7e\x06" "onenet")
QDEF(MP_QSTR_addresource, (const byte*)"\xae\x0b" "addresource")
QDEF(MP_QSTR_creat, (const byte*)"\x24\x05" "creat")
QDEF(MP_QSTR_disconnect, (const byte*)"\xa5\x0a" "disconnect")
QDEF(MP_QSTR_authinfo, (const byte*)"\x83\x08" "authinfo")
QDEF(MP_QSTR_psm, (const byte*)"\xab\x03" "psm")


QDEF(MP_QSTR_POLARITY_LOW, (const byte*)"\x8a\x0c" "POLARITY_LOW")
QDEF(MP_QSTR_POLARITY_HIGH, (const byte*)"\x90\x0d" "POLARITY_HIGH")
QDEF(MP_QSTR_PHASE_0, (const byte*)"\x05\x07" "PHASE_0")
QDEF(MP_QSTR_PHASE_1, (const byte*)"\x04\x07" "PHASE_1")

QDEF(MP_QSTR_FC_RTS, (const byte*)"\x2a\x06" "FC_RTS")
QDEF(MP_QSTR_FC_CTS, (const byte*)"\xfb\x06" "FC_CTS")
QDEF(MP_QSTR_FC_NONE, (const byte*)"\x95\x07" "FC_NONE")
	

QDEF(MP_QSTR_BITS_7, (const byte*)"\x01\x06" "BITS_7")
QDEF(MP_QSTR_BITS_8, (const byte*)"\x0e\x06" "BITS_8")
QDEF(MP_QSTR_BITS_9, (const byte*)"\x0f\x06" "BITS_9")
QDEF(MP_QSTR_PARITY_NONE, (const byte*)"\x97\x0b" "PARITY_NONE")
QDEF(MP_QSTR_PARITY_EVEN, (const byte*)"\x05\x0b" "PARITY_EVEN")
QDEF(MP_QSTR_PARITY_ODD, (const byte*)"\x32\x0a" "PARITY_ODD")
QDEF(MP_QSTR_STOP_1, (const byte*)"\xd3\x06" "STOP_1")
QDEF(MP_QSTR_STOP_2, (const byte*)"\xd0\x06" "STOP_2")
QDEF(MP_QSTR_dma, (const byte*)"\x6d\x03" "dma")
QDEF(MP_QSTR_port, (const byte*)"\x5c\x04" "port")

QDEF(MP_QSTR_STANDBY, (const byte*)"\x72\x07" "STANDBY")
QDEF(MP_QSTR_SHUTDOWN, (const byte*)"\xad\x08" "SHUTDOWN")

QDEF(MP_QSTR_dumpaddr, (const byte*)"\x9a\x08" "dumpaddr")


QDEF(MP_QSTR_uarray, (const byte*)"\x89\x06" "uarray")
	
QDEF(MP_QSTR___matmul__, (const byte*)"\x49\x0a" "__matmul__")
	
QDEF(MP_QSTR___bases__, (const byte*)"\x03\x09" "__bases__")

QDEF(MP_QSTR_mpy, (const byte*)"\xc1\x03" "mpy")

QDEF(MP_QSTR_Timer, (const byte*)"\xa2\x05" "Timer")
QDEF(MP_QSTR_tick_per_second, (const byte*)"\x07\x0f" "tick_per_second")
QDEF(MP_QSTR_HWTimer, (const byte*)"\x9d\x07" "HWTimer")
QDEF(MP_QSTR_ONE_SHOT, (const byte*)"\x5e\x08" "ONE_SHOT")
QDEF(MP_QSTR_PERIODIC, (const byte*)"\xa\x08" "PERIODIC")
QDEF(MP_QSTR_period, (const byte*)"\xa0\x06" "period")
	
QDEF(MP_QSTR_LED, (const byte*)"\x88\x03" "LED")
//QDEF(MP_QSTR_LED_RED, (const byte*)"\x84\x07" "LED_RED")
//QDEF(MP_QSTR_LED_BLUE, (const byte*)"\x69\x08" "LED_BLUE")
//QDEF(MP_QSTR_LED_GREEN, (const byte*)"\x4c\x09" "LED_GREEN")


QDEF(MP_QSTR_KEY, (const byte*)"\x12\x03" "KEY")
QDEF(MP_QSTR_SIX_AXIS, (const byte*)"\xfb\x08" "SIX_AXIS")
QDEF(MP_QSTR_X, (const byte*)"\xfd\x01" "X")
QDEF(MP_QSTR_Y, (const byte*)"\xfc\x01" "Y")
QDEF(MP_QSTR_Z, (const byte*)"\xff\x01" "Z")
QDEF(MP_QSTR_GYRO, (const byte*)"\xe6\x04" "GYRO")
QDEF(MP_QSTR_ACCE, (const byte*)"\x81\x04" "ACCE")
QDEF(MP_QSTR_LCD, (const byte*)"\xce\x03" "LCD")
	
QDEF(MP_QSTR_WHITE, (const byte*)"\xa2\x05" "WHITE")
QDEF(MP_QSTR_BLACK, (const byte*)"\x82\x05" "BLACK")
QDEF(MP_QSTR_BRED, (const byte*)"\x34\x04" "BRED")
QDEF(MP_QSTR_GRED, (const byte*)"\x91\x04" "GRED")
QDEF(MP_QSTR_GBLUE, (const byte*)"\x5c\x05" "GBLUE")
QDEF(MP_QSTR_RED, (const byte*)"\x96\x03" "RED")
QDEF(MP_QSTR_MAGENTA, (const byte*)"\xf0\x07" "MAGENTA")
QDEF(MP_QSTR_GREEN, (const byte*)"\xde\x05" "GREEN")
QDEF(MP_QSTR_CYAN, (const byte*)"\x10\x04" "CYAN")
QDEF(MP_QSTR_BROWN, (const byte*)"\xc3\x05" "BROWN")
QDEF(MP_QSTR_BRRED, (const byte*)"\x6\x05" "BRRED")
QDEF(MP_QSTR_GRAY, (const byte*)"\x8\x04" "GRAY")
QDEF(MP_QSTR_GRAY175, (const byte*)"\x1b\x07" "GRAY175")
QDEF(MP_QSTR_GRAY151, (const byte*)"\xdd\x07" "GRAY151")
QDEF(MP_QSTR_GRAY187, (const byte*)"\xb6\x07" "GRAY187")
QDEF(MP_QSTR_GRAY240, (const byte*)"\x3e\x07" "GRAY240")
QDEF(MP_QSTR_color, (const byte*)"\xd8\x05" "color")

QDEF(MP_QSTR_LIGHT, (const byte*)"\xdb\x05" "LIGHT")
QDEF(MP_QSTR_PROXIMITYS, (const byte*)"\x83\x0a" "PROXIMITYS")
QDEF(MP_QSTR_ALS_PS, (const byte*)"\x87\x06" "ALS_PS")
QDEF(MP_QSTR_now, (const byte*)"\xb3\x03" "now")


QDEF(MP_QSTR_AUDIO, (const byte*)"\x33\x05" "AUDIO")
QDEF(MP_QSTR_player, (const byte*)"\xd6\x06" "player")
QDEF(MP_QSTR_samplerate, (const byte*)"\xc1\x0a" "samplerate")
QDEF(MP_QSTR_channel, (const byte*)"\x26\x07" "channel")


QDEF(MP_QSTR_BEEP, (const byte*)"\x37\x04" "BEEP")
	
QDEF(MP_QSTR_keepalive, (const byte*)"\x69\x09" "keepalive")

QDEF(MP_QSTR_CAN, (const byte*)"\x89\x03" "CAN")
QDEF(MP_QSTR_prescale, (const byte*)"\x1a\x08" "prescale")
QDEF(MP_QSTR_sjw, (const byte*)"\x0b\x03" "sjw")
QDEF(MP_QSTR_bs1, (const byte*)"\x65\x03" "bs1")
QDEF(MP_QSTR_bs2, (const byte*)"\x66\x03" "bs2")
QDEF(MP_QSTR_ide, (const byte*)"\x4d\x03" "ide")
QDEF(MP_QSTR_rtr, (const byte*)"\x51\x03" "rtr")
	
QDEF(MP_QSTR_DAC, (const byte*)"\x03\x03" "DAC")

QDEF(MP_QSTR_HUMIDITY_HIGH, (const byte*)"\xd\x0d" "HUMIDITY_HIGH")

QDEF(MP_QSTR_rel_tol, (const byte*)"\x56\x07" "rel_tol")
QDEF(MP_QSTR_abs_tol, (const byte*)"\x7d\x07" "abs_tol")
QDEF(MP_QSTR_isclose, (const byte*)"\x49\x07" "isclose")
QDEF(MP_QSTR_factorial, (const byte*)"\xcc\x09" "factorial")

QDEF(MP_QSTR_crc32, (const byte*)"\x76\x05" "crc32")
	
QDEF(MP_QSTR_popleft, (const byte*)"\x71\x07" "popleft")
QDEF(MP_QSTR__asdict, (const byte*)"\x32\x07" "_asdict")

QDEF(MP_QSTR_md5, (const byte*)"\x19\x03" "md5")

QDEF(MP_QSTR_sub, (const byte*)"\x21\x03" "sub")

QDEF(MP_QSTR_groups, (const byte*)"\x89\x06" "groups")
QDEF(MP_QSTR_span, (const byte*)"\xc9\x04" "span")

QDEF(MP_QSTR_ucryptolib, (const byte*)"\x34\x0a" "ucryptolib")
QDEF(MP_QSTR_encrypt, (const byte*)"\xc2\x07" "encrypt")
QDEF(MP_QSTR_decrypt, (const byte*)"\xa8\x07" "decrypt")
QDEF(MP_QSTR_aes, (const byte*)"\x32\x03" "aes")

QDEF(MP_QSTR_fota, (const byte*)"\xd9\x04" "fota")
QDEF(MP_QSTR_upgrade, (const byte*)"\x95\x07" "upgrade")
QDEF(MP_QSTR_upgrade_report, (const byte*)"\xe4\x0e" "upgrade_report")

QDEF(MP_QSTR_mo_net, (const byte*)"\x07\x06" "mo_net")
QDEF(MP_QSTR_network, (const byte*)"\x5b\x07" "network")
QDEF(MP_QSTR_netif, (const byte*)"\x55\x05" "netif")
QDEF(MP_QSTR_active, (const byte*)"\x69\x06" "active")
QDEF(MP_QSTR_cfun, (const byte*)"\x5b\x04" "cfun")
QDEF(MP_QSTR_ipaddr, (const byte*)"\x8f\x06" "ipaddr")
QDEF(MP_QSTR_csq, (const byte*)"\xe4\x03" "csq")
QDEF(MP_QSTR_apn, (const byte*)"\xda\x03" "apn")
QDEF(MP_QSTR_simstat, (const byte*)"\xe0\x07" "simstat")
QDEF(MP_QSTR_imei, (const byte*)"\xcd\x04" "imei")
QDEF(MP_QSTR_imsi, (const byte*)"\x1b\x04" "imsi")
QDEF(MP_QSTR_ccid, (const byte*)"\x08\x04" "ccid")

QDEF(MP_QSTR_show_image, (const byte*)"\xde\x0a" "show_image")
QDEF(MP_QSTR_show_bmp, (const byte*)"\xe6\x08" "show_bmp")

// This file was automatically generated by makeqstrdata.py

