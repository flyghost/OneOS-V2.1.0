
/* Copyright 2015-present Samsung Electronics Co., Ltd. and other contributors
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * This file is generated by tools/js2c.py
 * Do not modify this.
 */
#ifndef IOTJS_JS_H
#define IOTJS_JS_H

extern const char module_assert[];
extern const uint32_t module_assert_idx;

extern const char module_buffer[];
extern const uint32_t module_buffer_idx;

extern const char module_console[];
extern const uint32_t module_console_idx;

extern const char module_dgram[];
extern const uint32_t module_dgram_idx;

extern const char module_dns[];
extern const uint32_t module_dns_idx;

extern const char module_events[];
extern const uint32_t module_events_idx;

extern const char module_fs[];
extern const uint32_t module_fs_idx;

extern const char module_gpio[];
extern const uint32_t module_gpio_idx;

extern const char module_http[];
extern const uint32_t module_http_idx;

extern const char module_http_client[];
extern const uint32_t module_http_client_idx;

extern const char module_http_common[];
extern const uint32_t module_http_common_idx;

extern const char module_http_incoming[];
extern const uint32_t module_http_incoming_idx;

extern const char module_http_outgoing[];
extern const uint32_t module_http_outgoing_idx;

extern const char module_http_server[];
extern const uint32_t module_http_server_idx;

extern const char module_i2c[];
extern const uint32_t module_i2c_idx;

extern const char module_iotjs[];
extern const uint32_t module_iotjs_idx;

extern const char module_module[];
extern const uint32_t module_module_idx;

extern const char module_net[];
extern const uint32_t module_net_idx;

extern const char module_pwm[];
extern const uint32_t module_pwm_idx;

extern const char module_stream[];
extern const uint32_t module_stream_idx;

extern const char module_stream_duplex[];
extern const uint32_t module_stream_duplex_idx;

extern const char module_stream_internal[];
extern const uint32_t module_stream_internal_idx;

extern const char module_stream_readable[];
extern const uint32_t module_stream_readable_idx;

extern const char module_stream_writable[];
extern const uint32_t module_stream_writable_idx;

extern const char module_timers[];
extern const uint32_t module_timers_idx;

extern const char module_uart[];
extern const uint32_t module_uart_idx;

extern const char module_util[];
extern const uint32_t module_util_idx;

extern const char iotjs_js_modules_n[];
extern const uint8_t iotjs_js_modules_s[];
extern const size_t iotjs_js_modules_l;

typedef struct {
  const char* name;
  const uint32_t idx;
} iotjs_js_module_t;

extern const iotjs_js_module_t js_modules[];

#endif
